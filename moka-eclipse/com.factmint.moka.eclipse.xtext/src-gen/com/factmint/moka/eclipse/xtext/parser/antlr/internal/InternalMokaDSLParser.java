package com.factmint.moka.eclipse.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.factmint.moka.eclipse.xtext.services.MokaDSLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMokaDSLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INT", "RULE_IMPLICIT_DECIMAL", "RULE_SL_COMMENT", "RULE_ML_COMMENT", "RULE_HEX", "RULE_DECIMAL", "RULE_WS", "RULE_ANY_OTHER", "'dependency'", "';'", "'field'", "'constant'", "'='", "'construct'", "'('", "')'", "'static'", "'final'", "'null'", "'new'", "'+='", "'-='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'>='", "'<='", "'>'", "'<'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'<=>'", "'+'", "'-'", "'*'", "'**'", "'/'", "'%'", "'!'", "'as'", "'.'", "'::'", "'?.'", "','", "'#'", "'{'", "'}'", "'['", "']'", "'|'", "'if'", "'else'", "'switch'", "':'", "'default'", "'case'", "'for'", "'while'", "'do'", "'var'", "'val'", "'extends'", "'import'", "'extension'", "'super'", "'false'", "'true'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'catch'", "'?'", "'&'", "'private'", "'protected'"
    };
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_ID=4;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=13;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int RULE_IMPLICIT_DECIMAL=7;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int RULE_HEX=10;
    public static final int T__58=58;
    public static final int T__16=16;
    public static final int T__51=51;
    public static final int T__90=90;
    public static final int T__15=15;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int T__59=59;
    public static final int RULE_INT=6;
    public static final int RULE_DECIMAL=11;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__80=80;
    public static final int T__46=46;
    public static final int T__81=81;
    public static final int T__47=47;
    public static final int T__82=82;
    public static final int T__44=44;
    public static final int T__83=83;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__85=85;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=5;
    public static final int T__32=32;
    public static final int T__71=71;
    public static final int T__33=33;
    public static final int T__72=72;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__70=70;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=12;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;

    // delegates
    // delegators


        public InternalMokaDSLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMokaDSLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMokaDSLParser.tokenNames; }
    public String getGrammarFileName() { return "../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g"; }



     	private MokaDSLGrammarAccess grammarAccess;
     	
        public InternalMokaDSLParser(TokenStream input, MokaDSLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Model";	
       	}
       	
       	@Override
       	protected MokaDSLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleModel"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:68:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:69:2: (iv_ruleModel= ruleModel EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:70:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_ruleModel_in_entryRuleModel75);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleModel85); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:77:1: ruleModel returns [EObject current=null] : ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleElement ) )* ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_importSection_0_0 = null;

        EObject lv_elements_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:80:28: ( ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleElement ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:81:1: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleElement ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:81:1: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleElement ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:81:2: ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleElement ) )*
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:81:2: ( (lv_importSection_0_0= ruleXImportSection ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==76) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:82:1: (lv_importSection_0_0= ruleXImportSection )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:82:1: (lv_importSection_0_0= ruleXImportSection )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:83:3: lv_importSection_0_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getModelAccess().getImportSectionXImportSectionParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXImportSection_in_ruleModel131);
                    lv_importSection_0_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getModelRule());
                      	        }
                             		set(
                             			current, 
                             			"importSection",
                              		lv_importSection_0_0, 
                              		"XImportSection");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:99:3: ( (lv_elements_1_0= ruleElement ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_ID||(LA2_0>=RULE_SL_COMMENT && LA2_0<=RULE_ML_COMMENT)||LA2_0==14||(LA2_0>=16 && LA2_0<=17)||LA2_0==20||(LA2_0>=22 && LA2_0<=23)||LA2_0==42||(LA2_0>=89 && LA2_0<=90)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:100:1: (lv_elements_1_0= ruleElement )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:100:1: (lv_elements_1_0= ruleElement )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:101:3: lv_elements_1_0= ruleElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleElement_in_ruleModel153);
            	    lv_elements_1_0=ruleElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModelRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_1_0, 
            	              		"Element");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleElement"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:125:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:126:2: (iv_ruleElement= ruleElement EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:127:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_ruleElement_in_entryRuleElement190);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleElement200); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:134:1: ruleElement returns [EObject current=null] : (this_Dependency_0= ruleDependency | this_Field_1= ruleField | this_Constant_2= ruleConstant | this_Constructor_3= ruleConstructor | this_Method_4= ruleMethod | ruleComment ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_Dependency_0 = null;

        EObject this_Field_1 = null;

        EObject this_Constant_2 = null;

        EObject this_Constructor_3 = null;

        EObject this_Method_4 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:137:28: ( (this_Dependency_0= ruleDependency | this_Field_1= ruleField | this_Constant_2= ruleConstant | this_Constructor_3= ruleConstructor | this_Method_4= ruleMethod | ruleComment ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:138:1: (this_Dependency_0= ruleDependency | this_Field_1= ruleField | this_Constant_2= ruleConstant | this_Constructor_3= ruleConstructor | this_Method_4= ruleMethod | ruleComment )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:138:1: (this_Dependency_0= ruleDependency | this_Field_1= ruleField | this_Constant_2= ruleConstant | this_Constructor_3= ruleConstructor | this_Method_4= ruleMethod | ruleComment )
            int alt3=6;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt3=1;
                }
                break;
            case 16:
                {
                alt3=2;
                }
                break;
            case 17:
                {
                alt3=3;
                }
                break;
            case 89:
                {
                int LA3_4 = input.LA(2);

                if ( (LA3_4==RULE_ID||LA3_4==20||LA3_4==42) ) {
                    alt3=5;
                }
                else if ( (LA3_4==19) ) {
                    alt3=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 4, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA3_5 = input.LA(2);

                if ( (LA3_5==19) ) {
                    alt3=4;
                }
                else if ( (LA3_5==RULE_ID||LA3_5==20||LA3_5==42) ) {
                    alt3=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 20:
            case 22:
            case 23:
            case 42:
                {
                alt3=5;
                }
                break;
            case RULE_SL_COMMENT:
            case RULE_ML_COMMENT:
                {
                alt3=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:139:5: this_Dependency_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getDependencyParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDependency_in_ruleElement247);
                    this_Dependency_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Dependency_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:149:5: this_Field_1= ruleField
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getFieldParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleField_in_ruleElement274);
                    this_Field_1=ruleField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Field_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:159:5: this_Constant_2= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getConstantParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleConstant_in_ruleElement301);
                    this_Constant_2=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:169:5: this_Constructor_3= ruleConstructor
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getConstructorParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleConstructor_in_ruleElement328);
                    this_Constructor_3=ruleConstructor();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constructor_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:179:5: this_Method_4= ruleMethod
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getMethodParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleMethod_in_ruleElement355);
                    this_Method_4=ruleMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Method_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:189:5: ruleComment
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getElementAccess().getCommentParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleComment_in_ruleElement376);
                    ruleComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleDependency"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:204:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:205:2: (iv_ruleDependency= ruleDependency EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:206:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_ruleDependency_in_entryRuleDependency411);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDependency421); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:213:1: ruleDependency returns [EObject current=null] : (otherlv_0= 'dependency' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_variable_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:216:28: ( (otherlv_0= 'dependency' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:217:1: (otherlv_0= 'dependency' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:217:1: (otherlv_0= 'dependency' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:217:3: otherlv_0= 'dependency' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,14,FOLLOW_14_in_ruleDependency458); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getDependencyKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:221:1: ( (lv_variable_1_0= ruleVariable ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:222:1: (lv_variable_1_0= ruleVariable )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:222:1: (lv_variable_1_0= ruleVariable )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:223:3: lv_variable_1_0= ruleVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDependencyAccess().getVariableVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleVariable_in_ruleDependency479);
            lv_variable_1_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDependencyRule());
              	        }
                     		set(
                     			current, 
                     			"variable",
                      		lv_variable_1_0, 
                      		"Variable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,15,FOLLOW_15_in_ruleDependency491); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getSemicolonKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleField"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:251:1: entryRuleField returns [EObject current=null] : iv_ruleField= ruleField EOF ;
    public final EObject entryRuleField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleField = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:252:2: (iv_ruleField= ruleField EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:253:2: iv_ruleField= ruleField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldRule()); 
            }
            pushFollow(FOLLOW_ruleField_in_entryRuleField527);
            iv_ruleField=ruleField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleField; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleField537); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleField"


    // $ANTLR start "ruleField"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:260:1: ruleField returns [EObject current=null] : (otherlv_0= 'field' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' ) ;
    public final EObject ruleField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_variable_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:263:28: ( (otherlv_0= 'field' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:264:1: (otherlv_0= 'field' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:264:1: (otherlv_0= 'field' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:264:3: otherlv_0= 'field' ( (lv_variable_1_0= ruleVariable ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_16_in_ruleField574); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:268:1: ( (lv_variable_1_0= ruleVariable ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:269:1: (lv_variable_1_0= ruleVariable )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:269:1: (lv_variable_1_0= ruleVariable )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:270:3: lv_variable_1_0= ruleVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldAccess().getVariableVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleVariable_in_ruleField595);
            lv_variable_1_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldRule());
              	        }
                     		set(
                     			current, 
                     			"variable",
                      		lv_variable_1_0, 
                      		"Variable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,15,FOLLOW_15_in_ruleField607); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getSemicolonKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleField"


    // $ANTLR start "entryRuleConstant"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:298:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:299:2: (iv_ruleConstant= ruleConstant EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:300:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_ruleConstant_in_entryRuleConstant643);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstant653); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:307:1: ruleConstant returns [EObject current=null] : (otherlv_0= 'constant' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) ) otherlv_8= ';' ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token this_STRING_4=null;
        Token this_INT_5=null;
        Token this_IMPLICIT_DECIMAL_6=null;
        Token otherlv_8=null;
        EObject lv_type_1_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:310:28: ( (otherlv_0= 'constant' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) ) otherlv_8= ';' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:311:1: (otherlv_0= 'constant' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) ) otherlv_8= ';' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:311:1: (otherlv_0= 'constant' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) ) otherlv_8= ';' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:311:3: otherlv_0= 'constant' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= RULE_ID ) ) ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) ) otherlv_8= ';'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_17_in_ruleConstant690); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConstantAccess().getConstantKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:315:1: ( (lv_type_1_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:316:1: (lv_type_1_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:316:1: (lv_type_1_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:317:3: lv_type_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstantAccess().getTypeJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleConstant711);
            lv_type_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstantRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:333:2: ( (lv_name_2_0= RULE_ID ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:334:1: (lv_name_2_0= RULE_ID )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:334:1: (lv_name_2_0= RULE_ID )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:335:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleConstant728); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"ID");
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:351:2: ( (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) ) | ( (lv_body_7_0= ruleXBlockExpression ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==18) ) {
                alt5=1;
            }
            else if ( (LA5_0==59) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:351:3: (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:351:3: (otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:351:5: otherlv_3= '=' (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL )
                    {
                    otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleConstant747); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getConstantAccess().getEqualsSignKeyword_3_0_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:355:1: (this_STRING_4= RULE_STRING | this_INT_5= RULE_INT | this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL )
                    int alt4=3;
                    switch ( input.LA(1) ) {
                    case RULE_STRING:
                        {
                        alt4=1;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt4=2;
                        }
                        break;
                    case RULE_IMPLICIT_DECIMAL:
                        {
                        alt4=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 0, input);

                        throw nvae;
                    }

                    switch (alt4) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:355:2: this_STRING_4= RULE_STRING
                            {
                            this_STRING_4=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleConstant759); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_STRING_4, grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_3_0_1_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:360:6: this_INT_5= RULE_INT
                            {
                            this_INT_5=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleConstant775); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_5, grammarAccess.getConstantAccess().getINTTerminalRuleCall_3_0_1_1()); 
                                  
                            }

                            }
                            break;
                        case 3 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:365:6: this_IMPLICIT_DECIMAL_6= RULE_IMPLICIT_DECIMAL
                            {
                            this_IMPLICIT_DECIMAL_6=(Token)match(input,RULE_IMPLICIT_DECIMAL,FOLLOW_RULE_IMPLICIT_DECIMAL_in_ruleConstant791); if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_IMPLICIT_DECIMAL_6, grammarAccess.getConstantAccess().getIMPLICIT_DECIMALTerminalRuleCall_3_0_1_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:370:6: ( (lv_body_7_0= ruleXBlockExpression ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:370:6: ( (lv_body_7_0= ruleXBlockExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:371:1: (lv_body_7_0= ruleXBlockExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:371:1: (lv_body_7_0= ruleXBlockExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:372:3: lv_body_7_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConstantAccess().getBodyXBlockExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXBlockExpression_in_ruleConstant819);
                    lv_body_7_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConstantRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"XBlockExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,15,FOLLOW_15_in_ruleConstant832); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getConstantAccess().getSemicolonKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleConstructor"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:400:1: entryRuleConstructor returns [EObject current=null] : iv_ruleConstructor= ruleConstructor EOF ;
    public final EObject entryRuleConstructor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructor = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:401:2: (iv_ruleConstructor= ruleConstructor EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:402:2: iv_ruleConstructor= ruleConstructor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstructorRule()); 
            }
            pushFollow(FOLLOW_ruleConstructor_in_entryRuleConstructor868);
            iv_ruleConstructor=ruleConstructor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstructor; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstructor878); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstructor"


    // $ANTLR start "ruleConstructor"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:409:1: ruleConstructor returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibility ) ) otherlv_1= 'construct' otherlv_2= '(' ( (lv_constructorArgs_3_0= ruleMethodVariable ) )* otherlv_4= ')' ( (lv_body_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleConstructor() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_constructorArgs_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:412:28: ( ( ( (lv_visibility_0_0= ruleVisibility ) ) otherlv_1= 'construct' otherlv_2= '(' ( (lv_constructorArgs_3_0= ruleMethodVariable ) )* otherlv_4= ')' ( (lv_body_5_0= ruleXBlockExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:413:1: ( ( (lv_visibility_0_0= ruleVisibility ) ) otherlv_1= 'construct' otherlv_2= '(' ( (lv_constructorArgs_3_0= ruleMethodVariable ) )* otherlv_4= ')' ( (lv_body_5_0= ruleXBlockExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:413:1: ( ( (lv_visibility_0_0= ruleVisibility ) ) otherlv_1= 'construct' otherlv_2= '(' ( (lv_constructorArgs_3_0= ruleMethodVariable ) )* otherlv_4= ')' ( (lv_body_5_0= ruleXBlockExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:413:2: ( (lv_visibility_0_0= ruleVisibility ) ) otherlv_1= 'construct' otherlv_2= '(' ( (lv_constructorArgs_3_0= ruleMethodVariable ) )* otherlv_4= ')' ( (lv_body_5_0= ruleXBlockExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:413:2: ( (lv_visibility_0_0= ruleVisibility ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:414:1: (lv_visibility_0_0= ruleVisibility )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:414:1: (lv_visibility_0_0= ruleVisibility )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:415:3: lv_visibility_0_0= ruleVisibility
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstructorAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleVisibility_in_ruleConstructor924);
            lv_visibility_0_0=ruleVisibility();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstructorRule());
              	        }
                     		set(
                     			current, 
                     			"visibility",
                      		lv_visibility_0_0, 
                      		"Visibility");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,19,FOLLOW_19_in_ruleConstructor936); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getConstructKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,20,FOLLOW_20_in_ruleConstructor948); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:439:1: ( (lv_constructorArgs_3_0= ruleMethodVariable ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==RULE_ID||LA6_0==20||LA6_0==42) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:440:1: (lv_constructorArgs_3_0= ruleMethodVariable )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:440:1: (lv_constructorArgs_3_0= ruleMethodVariable )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:441:3: lv_constructorArgs_3_0= ruleMethodVariable
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getConstructorAccess().getConstructorArgsMethodVariableParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleMethodVariable_in_ruleConstructor969);
            	    lv_constructorArgs_3_0=ruleMethodVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getConstructorRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"constructorArgs",
            	              		lv_constructorArgs_3_0, 
            	              		"MethodVariable");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleConstructor982); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:461:1: ( (lv_body_5_0= ruleXBlockExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:462:1: (lv_body_5_0= ruleXBlockExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:462:1: (lv_body_5_0= ruleXBlockExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:463:3: lv_body_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstructorAccess().getBodyXBlockExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXBlockExpression_in_ruleConstructor1003);
            lv_body_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstructorRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"XBlockExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstructor"


    // $ANTLR start "entryRuleMethod"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:487:1: entryRuleMethod returns [EObject current=null] : iv_ruleMethod= ruleMethod EOF ;
    public final EObject entryRuleMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethod = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:488:2: (iv_ruleMethod= ruleMethod EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:489:2: iv_ruleMethod= ruleMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodRule()); 
            }
            pushFollow(FOLLOW_ruleMethod_in_entryRuleMethod1039);
            iv_ruleMethod=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethod; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMethod1049); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethod"


    // $ANTLR start "ruleMethod"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:496:1: ruleMethod returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleMethod() throws RecognitionException {
        EObject current = null;

        Token lv_static_1_0=null;
        Token lv_final_2_0=null;
        Token lv_name_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_visibility_3_0 = null;

        EObject lv_returnType_4_0 = null;

        EObject lv_constructorArgs_7_0 = null;

        EObject lv_body_9_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:499:28: ( ( ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:500:1: ( ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:500:1: ( ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:502:1: ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:502:1: ( ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:503:2: ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getMethodAccess().getUnorderedGroup());
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:506:2: ( ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?)
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:507:3: ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+ {...}?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:507:3: ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+
            int cnt10=0;
            loop10:
            do {
                int alt10=4;
                alt10 = dfa10.predict(input);
                switch (alt10) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:509:4: ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:509:4: ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:510:5: {...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 0)");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:510:101: ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:511:6: ({...}? => ( (lv_static_1_0= 'static' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMethodAccess().getUnorderedGroup(), 0);
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:514:6: ({...}? => ( (lv_static_1_0= 'static' ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:514:7: {...}? => ( (lv_static_1_0= 'static' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "true");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:514:16: ( (lv_static_1_0= 'static' ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:515:1: (lv_static_1_0= 'static' )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:515:1: (lv_static_1_0= 'static' )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:516:3: lv_static_1_0= 'static'
            	    {
            	    lv_static_1_0=(Token)match(input,22,FOLLOW_22_in_ruleMethod1136); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_static_1_0, grammarAccess.getMethodAccess().getStaticStaticKeyword_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getMethodRule());
            	      	        }
            	             		setWithLastConsumed(current, "static", true, "static");
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMethodAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:536:4: ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:536:4: ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:537:5: {...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 1)");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:537:101: ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:538:6: ({...}? => ( (lv_final_2_0= 'final' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMethodAccess().getUnorderedGroup(), 1);
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:541:6: ({...}? => ( (lv_final_2_0= 'final' ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:541:7: {...}? => ( (lv_final_2_0= 'final' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "true");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:541:16: ( (lv_final_2_0= 'final' ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:542:1: (lv_final_2_0= 'final' )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:542:1: (lv_final_2_0= 'final' )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:543:3: lv_final_2_0= 'final'
            	    {
            	    lv_final_2_0=(Token)match(input,23,FOLLOW_23_in_ruleMethod1221); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_final_2_0, grammarAccess.getMethodAccess().getFinalFinalKeyword_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getMethodRule());
            	      	        }
            	             		setWithLastConsumed(current, "final", true, "final");
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMethodAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:563:4: ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:563:4: ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:564:5: {...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2)");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:564:101: ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:565:6: ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMethodAccess().getUnorderedGroup(), 2);
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:568:6: ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:568:7: {...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMethod", "true");
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:568:16: ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:568:17: ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:568:17: ( (lv_visibility_3_0= ruleVisibility ) )?
            	    int alt7=2;
            	    int LA7_0 = input.LA(1);

            	    if ( ((LA7_0>=89 && LA7_0<=90)) ) {
            	        alt7=1;
            	    }
            	    switch (alt7) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:569:1: (lv_visibility_3_0= ruleVisibility )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:569:1: (lv_visibility_3_0= ruleVisibility )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:570:3: lv_visibility_3_0= ruleVisibility
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_2_0_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleVisibility_in_ruleMethod1310);
            	            lv_visibility_3_0=ruleVisibility();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getMethodRule());
            	              	        }
            	                     		set(
            	                     			current, 
            	                     			"visibility",
            	                      		lv_visibility_3_0, 
            	                      		"Visibility");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:586:3: ( (lv_returnType_4_0= ruleJvmTypeReference ) )?
            	    int alt8=2;
            	    int LA8_0 = input.LA(1);

            	    if ( (LA8_0==RULE_ID) ) {
            	        int LA8_1 = input.LA(2);

            	        if ( (LA8_1==RULE_ID||LA8_1==38||LA8_1==54||LA8_1==61) ) {
            	            alt8=1;
            	        }
            	    }
            	    else if ( (LA8_0==20||LA8_0==42) ) {
            	        alt8=1;
            	    }
            	    switch (alt8) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:587:1: (lv_returnType_4_0= ruleJvmTypeReference )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:587:1: (lv_returnType_4_0= ruleJvmTypeReference )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:588:3: lv_returnType_4_0= ruleJvmTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getMethodAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleMethod1332);
            	            lv_returnType_4_0=ruleJvmTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getMethodRule());
            	              	        }
            	                     		set(
            	                     			current, 
            	                     			"returnType",
            	                      		lv_returnType_4_0, 
            	                      		"JvmTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:604:3: ( (lv_name_5_0= RULE_ID ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:605:1: (lv_name_5_0= RULE_ID )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:605:1: (lv_name_5_0= RULE_ID )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:606:3: lv_name_5_0= RULE_ID
            	    {
            	    lv_name_5_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMethod1350); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_name_5_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_2_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getMethodRule());
            	      	        }
            	             		setWithLastConsumed(
            	             			current, 
            	             			"name",
            	              		lv_name_5_0, 
            	              		"ID");
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,20,FOLLOW_20_in_ruleMethod1367); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2_3());
            	          
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:626:1: ( (lv_constructorArgs_7_0= ruleMethodVariable ) )*
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==RULE_ID||LA9_0==20||LA9_0==42) ) {
            	            alt9=1;
            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:627:1: (lv_constructorArgs_7_0= ruleMethodVariable )
            	    	    {
            	    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:627:1: (lv_constructorArgs_7_0= ruleMethodVariable )
            	    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:628:3: lv_constructorArgs_7_0= ruleMethodVariable
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getMethodAccess().getConstructorArgsMethodVariableParserRuleCall_2_4_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_ruleMethodVariable_in_ruleMethod1388);
            	    	    lv_constructorArgs_7_0=ruleMethodVariable();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getMethodRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constructorArgs",
            	    	              		lv_constructorArgs_7_0, 
            	    	              		"MethodVariable");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop9;
            	        }
            	    } while (true);

            	    otherlv_8=(Token)match(input,21,FOLLOW_21_in_ruleMethod1401); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getRightParenthesisKeyword_2_5());
            	          
            	    }
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:648:1: ( (lv_body_9_0= ruleXBlockExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:649:1: (lv_body_9_0= ruleXBlockExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:649:1: (lv_body_9_0= ruleXBlockExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:650:3: lv_body_9_0= ruleXBlockExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMethodAccess().getBodyXBlockExpressionParserRuleCall_2_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXBlockExpression_in_ruleMethod1422);
            	    lv_body_9_0=ruleXBlockExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMethodRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"body",
            	              		lv_body_9_0, 
            	              		"XBlockExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMethodAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleMethod", "getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getMethodAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethod"


    // $ANTLR start "entryRuleVariable"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:689:1: entryRuleVariable returns [EObject current=null] : iv_ruleVariable= ruleVariable EOF ;
    public final EObject entryRuleVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariable = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:690:2: (iv_ruleVariable= ruleVariable EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:691:2: iv_ruleVariable= ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_ruleVariable_in_entryRuleVariable1504);
            iv_ruleVariable=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariable; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariable1514); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:698:1: ruleVariable returns [EObject current=null] : ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleVariable() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        EObject lv_type_0_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:701:28: ( ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:702:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:702:1: ( ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= RULE_ID ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:702:2: ( (lv_type_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= RULE_ID ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:702:2: ( (lv_type_0_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:703:1: (lv_type_0_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:703:1: (lv_type_0_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:704:3: lv_type_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableAccess().getTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleVariable1560);
            lv_type_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:720:2: ( (lv_name_1_0= RULE_ID ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:721:1: (lv_name_1_0= RULE_ID )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:721:1: (lv_name_1_0= RULE_ID )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:722:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVariable1577); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getVariableRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleMethodVariable"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:746:1: entryRuleMethodVariable returns [EObject current=null] : iv_ruleMethodVariable= ruleMethodVariable EOF ;
    public final EObject entryRuleMethodVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodVariable = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:747:2: (iv_ruleMethodVariable= ruleMethodVariable EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:748:2: iv_ruleMethodVariable= ruleMethodVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodVariableRule()); 
            }
            pushFollow(FOLLOW_ruleMethodVariable_in_entryRuleMethodVariable1618);
            iv_ruleMethodVariable=ruleMethodVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodVariable; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMethodVariable1628); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodVariable"


    // $ANTLR start "ruleMethodVariable"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:755:1: ruleMethodVariable returns [EObject current=null] : ( ( (lv_variable_0_0= ruleVariable ) ) (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )? ) ;
    public final EObject ruleMethodVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_variable_0_0 = null;

        EObject lv_default_2_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:758:28: ( ( ( (lv_variable_0_0= ruleVariable ) ) (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:759:1: ( ( (lv_variable_0_0= ruleVariable ) ) (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:759:1: ( ( (lv_variable_0_0= ruleVariable ) ) (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:759:2: ( (lv_variable_0_0= ruleVariable ) ) (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:759:2: ( (lv_variable_0_0= ruleVariable ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:760:1: (lv_variable_0_0= ruleVariable )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:760:1: (lv_variable_0_0= ruleVariable )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:761:3: lv_variable_0_0= ruleVariable
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodVariableAccess().getVariableVariableParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleVariable_in_ruleMethodVariable1674);
            lv_variable_0_0=ruleVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodVariableRule());
              	        }
                     		set(
                     			current, 
                     			"variable",
                      		lv_variable_0_0, 
                      		"Variable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:777:2: (otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==18) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:777:4: otherlv_1= '=' ( (lv_default_2_0= ruleDefaultValue ) )
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_18_in_ruleMethodVariable1687); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodVariableAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:781:1: ( (lv_default_2_0= ruleDefaultValue ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:782:1: (lv_default_2_0= ruleDefaultValue )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:782:1: (lv_default_2_0= ruleDefaultValue )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:783:3: lv_default_2_0= ruleDefaultValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodVariableAccess().getDefaultDefaultValueParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleDefaultValue_in_ruleMethodVariable1708);
                    lv_default_2_0=ruleDefaultValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_2_0, 
                              		"DefaultValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodVariable"


    // $ANTLR start "entryRuleComment"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:807:1: entryRuleComment returns [String current=null] : iv_ruleComment= ruleComment EOF ;
    public final String entryRuleComment() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleComment = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:808:2: (iv_ruleComment= ruleComment EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:809:2: iv_ruleComment= ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_ruleComment_in_entryRuleComment1747);
            iv_ruleComment=ruleComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComment.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleComment1758); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:816:1: ruleComment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SL_COMMENT_0= RULE_SL_COMMENT | this_ML_COMMENT_1= RULE_ML_COMMENT ) ;
    public final AntlrDatatypeRuleToken ruleComment() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SL_COMMENT_0=null;
        Token this_ML_COMMENT_1=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:819:28: ( (this_SL_COMMENT_0= RULE_SL_COMMENT | this_ML_COMMENT_1= RULE_ML_COMMENT ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:820:1: (this_SL_COMMENT_0= RULE_SL_COMMENT | this_ML_COMMENT_1= RULE_ML_COMMENT )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:820:1: (this_SL_COMMENT_0= RULE_SL_COMMENT | this_ML_COMMENT_1= RULE_ML_COMMENT )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_SL_COMMENT) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_ML_COMMENT) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:820:6: this_SL_COMMENT_0= RULE_SL_COMMENT
                    {
                    this_SL_COMMENT_0=(Token)match(input,RULE_SL_COMMENT,FOLLOW_RULE_SL_COMMENT_in_ruleComment1798); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SL_COMMENT_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SL_COMMENT_0, grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:828:10: this_ML_COMMENT_1= RULE_ML_COMMENT
                    {
                    this_ML_COMMENT_1=(Token)match(input,RULE_ML_COMMENT,FOLLOW_RULE_ML_COMMENT_in_ruleComment1824); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ML_COMMENT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ML_COMMENT_1, grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleDefaultValue"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:843:1: entryRuleDefaultValue returns [EObject current=null] : iv_ruleDefaultValue= ruleDefaultValue EOF ;
    public final EObject entryRuleDefaultValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultValue = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:844:2: (iv_ruleDefaultValue= ruleDefaultValue EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:845:2: iv_ruleDefaultValue= ruleDefaultValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultValueRule()); 
            }
            pushFollow(FOLLOW_ruleDefaultValue_in_entryRuleDefaultValue1869);
            iv_ruleDefaultValue=ruleDefaultValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDefaultValue1879); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefaultValue"


    // $ANTLR start "ruleDefaultValue"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:852:1: ruleDefaultValue returns [EObject current=null] : (otherlv_0= 'null' | otherlv_1= 'new' | ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleDefaultValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:855:28: ( (otherlv_0= 'null' | otherlv_1= 'new' | ( (otherlv_2= RULE_ID ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:856:1: (otherlv_0= 'null' | otherlv_1= 'new' | ( (otherlv_2= RULE_ID ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:856:1: (otherlv_0= 'null' | otherlv_1= 'new' | ( (otherlv_2= RULE_ID ) ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt13=1;
                }
                break;
            case 25:
                {
                alt13=2;
                }
                break;
            case RULE_ID:
                {
                alt13=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:856:3: otherlv_0= 'null'
                    {
                    otherlv_0=(Token)match(input,24,FOLLOW_24_in_ruleDefaultValue1916); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDefaultValueAccess().getNullKeyword_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:861:7: otherlv_1= 'new'
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_25_in_ruleDefaultValue1934); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDefaultValueAccess().getNewKeyword_1());
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:866:6: ( (otherlv_2= RULE_ID ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:866:6: ( (otherlv_2= RULE_ID ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:867:1: (otherlv_2= RULE_ID )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:867:1: (otherlv_2= RULE_ID )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:868:3: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDefaultValueRule());
                      	        }
                              
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleDefaultValue1960); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_2, grammarAccess.getDefaultValueAccess().getValueConstantCrossReference_2_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefaultValue"


    // $ANTLR start "entryRuleXExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:887:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:888:2: (iv_ruleXExpression= ruleXExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:889:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXExpression_in_entryRuleXExpression1996);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpression2006); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:896:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:899:28: (this_XAssignment_0= ruleXAssignment )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:901:5: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_ruleXAssignment_in_ruleXExpression2052);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAssignment_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:917:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:918:2: (iv_ruleXAssignment= ruleXAssignment EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:919:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_ruleXAssignment_in_entryRuleXAssignment2086);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAssignment2096); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:926:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:929:28: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:1: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt15=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA15_1 = input.LA(2);

                if ( (LA15_1==EOF||(LA15_1>=RULE_ID && LA15_1<=RULE_INT)||(LA15_1>=RULE_HEX && LA15_1<=RULE_DECIMAL)||LA15_1==15||(LA15_1>=20 && LA15_1<=22)||(LA15_1>=24 && LA15_1<=62)||(LA15_1>=64 && LA15_1<=86)) ) {
                    alt15=2;
                }
                else if ( (LA15_1==18) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }
                }
                break;
            case 75:
                {
                int LA15_2 = input.LA(2);

                if ( (LA15_2==EOF||(LA15_2>=RULE_ID && LA15_2<=RULE_INT)||(LA15_2>=RULE_HEX && LA15_2<=RULE_DECIMAL)||LA15_2==15||(LA15_2>=20 && LA15_2<=22)||(LA15_2>=24 && LA15_2<=62)||(LA15_2>=64 && LA15_2<=86)) ) {
                    alt15=2;
                }
                else if ( (LA15_2==18) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 2, input);

                    throw nvae;
                }
                }
                break;
            case 22:
                {
                int LA15_3 = input.LA(2);

                if ( (LA15_3==18) ) {
                    alt15=1;
                }
                else if ( (LA15_3==EOF||(LA15_3>=RULE_ID && LA15_3<=RULE_INT)||(LA15_3>=RULE_HEX && LA15_3<=RULE_DECIMAL)||LA15_3==15||(LA15_3>=20 && LA15_3<=22)||(LA15_3>=24 && LA15_3<=62)||(LA15_3>=64 && LA15_3<=86)) ) {
                    alt15=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 3, input);

                    throw nvae;
                }
                }
                break;
            case 76:
                {
                int LA15_4 = input.LA(2);

                if ( (LA15_4==EOF||(LA15_4>=RULE_ID && LA15_4<=RULE_INT)||(LA15_4>=RULE_HEX && LA15_4<=RULE_DECIMAL)||LA15_4==15||(LA15_4>=20 && LA15_4<=22)||(LA15_4>=24 && LA15_4<=62)||(LA15_4>=64 && LA15_4<=86)) ) {
                    alt15=2;
                }
                else if ( (LA15_4==18) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 4, input);

                    throw nvae;
                }
                }
                break;
            case 77:
                {
                int LA15_5 = input.LA(2);

                if ( (LA15_5==18) ) {
                    alt15=1;
                }
                else if ( (LA15_5==EOF||(LA15_5>=RULE_ID && LA15_5<=RULE_INT)||(LA15_5>=RULE_HEX && LA15_5<=RULE_DECIMAL)||LA15_5==15||(LA15_5>=20 && LA15_5<=22)||(LA15_5>=24 && LA15_5<=62)||(LA15_5>=64 && LA15_5<=86)) ) {
                    alt15=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 20:
            case 24:
            case 25:
            case 38:
            case 46:
            case 47:
            case 52:
            case 58:
            case 59:
            case 61:
            case 64:
            case 66:
            case 70:
            case 71:
            case 72:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
                {
                alt15=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:2: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:3: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:930:3: ()
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:931:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:936:2: ( ( ruleFeatureCallID ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:937:1: ( ruleFeatureCallID )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:937:1: ( ruleFeatureCallID )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:938:3: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXAssignmentRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXAssignment2154);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXAssignment2170);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:959:1: ( (lv_value_3_0= ruleXAssignment ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:960:1: (lv_value_3_0= ruleXAssignment )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:960:1: (lv_value_3_0= ruleXAssignment )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:961:3: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment2190);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"XAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:978:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:978:6: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:979:5: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXOrExpression_in_ruleXAssignment2220);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XOrExpression_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:1: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt14=2;
                    int LA14_0 = input.LA(1);

                    if ( (LA14_0==26) ) {
                        int LA14_1 = input.LA(2);

                        if ( (synpred1_InternalMokaDSL()) ) {
                            alt14=1;
                        }
                    }
                    else if ( (LA14_0==27) ) {
                        int LA14_2 = input.LA(2);

                        if ( (synpred1_InternalMokaDSL()) ) {
                            alt14=1;
                        }
                    }
                    switch (alt14) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:2: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:992:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:992:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:992:7: ()
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:993:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:998:2: ( ( ruleOpMultiAssign ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:999:1: ( ruleOpMultiAssign )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:999:1: ( ruleOpMultiAssign )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1000:3: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getXAssignmentRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleOpMultiAssign_in_ruleXAssignment2273);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1013:4: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1014:1: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1014:1: (lv_rightOperand_7_0= ruleXAssignment )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1015:3: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXAssignment_in_ruleXAssignment2296);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rightOperand",
                                      		lv_rightOperand_7_0, 
                                      		"XAssignment");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1039:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1040:2: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1041:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign2336);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpSingleAssign2347); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1048:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1051:28: (kw= '=' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1053:2: kw= '='
            {
            kw=(Token)match(input,18,FOLLOW_18_in_ruleOpSingleAssign2384); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1066:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1067:2: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1068:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign2424);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMultiAssign2435); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1075:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1078:28: ( (kw= '+=' | kw= '-=' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1079:1: (kw= '+=' | kw= '-=' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1079:1: (kw= '+=' | kw= '-=' )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==26) ) {
                alt16=1;
            }
            else if ( (LA16_0==27) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1080:2: kw= '+='
                    {
                    kw=(Token)match(input,26,FOLLOW_26_in_ruleOpMultiAssign2473); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1087:2: kw= '-='
                    {
                    kw=(Token)match(input,27,FOLLOW_27_in_ruleOpMultiAssign2492); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1100:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1101:2: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1102:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression2532);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOrExpression2542); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1109:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1112:28: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1113:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1113:1: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1114:5: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression2589);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAndExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==28) ) {
                    int LA17_2 = input.LA(2);

                    if ( (synpred2_InternalMokaDSL()) ) {
                        alt17=1;
                    }


                }


                switch (alt17) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1127:6: ( () ( ( ruleOpOr ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1127:7: () ( ( ruleOpOr ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1127:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1128:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1133:2: ( ( ruleOpOr ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1134:1: ( ruleOpOr )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1134:1: ( ruleOpOr )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1135:3: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOr_in_ruleXOrExpression2642);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1148:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1149:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1149:1: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1150:3: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAndExpression_in_ruleXOrExpression2665);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1174:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1175:2: (iv_ruleOpOr= ruleOpOr EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1176:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_ruleOpOr_in_entryRuleOpOr2704);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOr2715); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1183:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1186:28: (kw= '||' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1188:2: kw= '||'
            {
            kw=(Token)match(input,28,FOLLOW_28_in_ruleOpOr2752); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1201:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1202:2: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1203:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression2791);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAndExpression2801); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1210:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1213:28: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1214:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1214:1: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1215:5: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression2848);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XEqualityExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==29) ) {
                    int LA18_2 = input.LA(2);

                    if ( (synpred3_InternalMokaDSL()) ) {
                        alt18=1;
                    }


                }


                switch (alt18) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1228:6: ( () ( ( ruleOpAnd ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1228:7: () ( ( ruleOpAnd ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1228:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1229:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1234:2: ( ( ruleOpAnd ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1235:1: ( ruleOpAnd )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1235:1: ( ruleOpAnd )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1236:3: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAnd_in_ruleXAndExpression2901);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1249:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1250:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1250:1: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1251:3: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression2924);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1275:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1276:2: (iv_ruleOpAnd= ruleOpAnd EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1277:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_ruleOpAnd_in_entryRuleOpAnd2963);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAnd2974); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1284:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1287:28: (kw= '&&' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1289:2: kw= '&&'
            {
            kw=(Token)match(input,29,FOLLOW_29_in_ruleOpAnd3011); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1302:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1303:2: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1304:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression3050);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXEqualityExpression3060); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1311:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1314:28: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1315:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1315:1: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1316:5: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression3107);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XRelationalExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop19:
            do {
                int alt19=2;
                switch ( input.LA(1) ) {
                case 30:
                    {
                    int LA19_2 = input.LA(2);

                    if ( (synpred4_InternalMokaDSL()) ) {
                        alt19=1;
                    }


                    }
                    break;
                case 31:
                    {
                    int LA19_3 = input.LA(2);

                    if ( (synpred4_InternalMokaDSL()) ) {
                        alt19=1;
                    }


                    }
                    break;
                case 32:
                    {
                    int LA19_4 = input.LA(2);

                    if ( (synpred4_InternalMokaDSL()) ) {
                        alt19=1;
                    }


                    }
                    break;
                case 33:
                    {
                    int LA19_5 = input.LA(2);

                    if ( (synpred4_InternalMokaDSL()) ) {
                        alt19=1;
                    }


                    }
                    break;

                }

                switch (alt19) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1329:6: ( () ( ( ruleOpEquality ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1329:7: () ( ( ruleOpEquality ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1329:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1330:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1335:2: ( ( ruleOpEquality ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1336:1: ( ruleOpEquality )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1336:1: ( ruleOpEquality )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1337:3: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpEquality_in_ruleXEqualityExpression3160);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1350:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1351:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1351:1: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1352:3: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression3183);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XRelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1376:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1377:2: (iv_ruleOpEquality= ruleOpEquality EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1378:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_ruleOpEquality_in_entryRuleOpEquality3222);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpEquality3233); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1385:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1388:28: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1389:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1389:1: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt20=4;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt20=1;
                }
                break;
            case 31:
                {
                alt20=2;
                }
                break;
            case 32:
                {
                alt20=3;
                }
                break;
            case 33:
                {
                alt20=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1390:2: kw= '=='
                    {
                    kw=(Token)match(input,30,FOLLOW_30_in_ruleOpEquality3271); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1397:2: kw= '!='
                    {
                    kw=(Token)match(input,31,FOLLOW_31_in_ruleOpEquality3290); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1404:2: kw= '==='
                    {
                    kw=(Token)match(input,32,FOLLOW_32_in_ruleOpEquality3309); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1411:2: kw= '!=='
                    {
                    kw=(Token)match(input,33,FOLLOW_33_in_ruleOpEquality3328); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1424:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1425:2: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1426:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression3368);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXRelationalExpression3378); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1433:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1436:28: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1437:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1437:1: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1438:5: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression3425);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XOtherOperatorExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:1: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop21:
            do {
                int alt21=3;
                switch ( input.LA(1) ) {
                case 37:
                    {
                    int LA21_2 = input.LA(2);

                    if ( (synpred6_InternalMokaDSL()) ) {
                        alt21=2;
                    }


                    }
                    break;
                case 38:
                    {
                    int LA21_3 = input.LA(2);

                    if ( (synpred6_InternalMokaDSL()) ) {
                        alt21=2;
                    }


                    }
                    break;
                case 34:
                    {
                    int LA21_4 = input.LA(2);

                    if ( (synpred5_InternalMokaDSL()) ) {
                        alt21=1;
                    }


                    }
                    break;
                case 35:
                    {
                    int LA21_5 = input.LA(2);

                    if ( (synpred6_InternalMokaDSL()) ) {
                        alt21=2;
                    }


                    }
                    break;
                case 36:
                    {
                    int LA21_6 = input.LA(2);

                    if ( (synpred6_InternalMokaDSL()) ) {
                        alt21=2;
                    }


                    }
                    break;

                }

                switch (alt21) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:2: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:3: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:4: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1448:5: ( () otherlv_2= 'instanceof' )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1448:6: () otherlv_2= 'instanceof'
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1448:6: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1449:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,34,FOLLOW_34_in_ruleXRelationalExpression3461); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1458:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1459:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1459:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1460:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression3484);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:6: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:7: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:8: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1482:6: ( () ( ( ruleOpCompare ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1482:7: () ( ( ruleOpCompare ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1482:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1483:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1488:2: ( ( ruleOpCompare ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1489:1: ( ruleOpCompare )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1489:1: ( ruleOpCompare )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1490:3: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpCompare_in_ruleXRelationalExpression3545);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1503:4: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1504:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1504:1: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1505:3: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression3568);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_6_0, 
            	              		"XOtherOperatorExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1529:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1530:2: (iv_ruleOpCompare= ruleOpCompare EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1531:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_ruleOpCompare_in_entryRuleOpCompare3608);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpCompare3619); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1538:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | kw= '<=' | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1541:28: ( (kw= '>=' | kw= '<=' | kw= '>' | kw= '<' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1542:1: (kw= '>=' | kw= '<=' | kw= '>' | kw= '<' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1542:1: (kw= '>=' | kw= '<=' | kw= '>' | kw= '<' )
            int alt22=4;
            switch ( input.LA(1) ) {
            case 35:
                {
                alt22=1;
                }
                break;
            case 36:
                {
                alt22=2;
                }
                break;
            case 37:
                {
                alt22=3;
                }
                break;
            case 38:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1543:2: kw= '>='
                    {
                    kw=(Token)match(input,35,FOLLOW_35_in_ruleOpCompare3657); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1550:2: kw= '<='
                    {
                    kw=(Token)match(input,36,FOLLOW_36_in_ruleOpCompare3676); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1557:2: kw= '>'
                    {
                    kw=(Token)match(input,37,FOLLOW_37_in_ruleOpCompare3695); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1564:2: kw= '<'
                    {
                    kw=(Token)match(input,38,FOLLOW_38_in_ruleOpCompare3714); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1577:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1578:2: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1579:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression3754);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXOtherOperatorExpression3764); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1586:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1589:28: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1590:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1590:1: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1591:5: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression3811);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XAdditiveExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop23:
            do {
                int alt23=2;
                alt23 = dfa23.predict(input);
                switch (alt23) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:2: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:3: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1604:6: ( () ( ( ruleOpOther ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1604:7: () ( ( ruleOpOther ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1604:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1605:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1610:2: ( ( ruleOpOther ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1611:1: ( ruleOpOther )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1611:1: ( ruleOpOther )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1612:3: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression3864);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1625:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1626:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1626:1: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1627:3: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression3887);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1651:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1652:2: (iv_ruleOpOther= ruleOpOther EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1653:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_ruleOpOther_in_entryRuleOpOther3926);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpOther3937); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1660:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) ) | kw= '<>' | kw= '?:' | kw= '<=>' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1663:28: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) ) | kw= '<>' | kw= '?:' | kw= '<=>' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1664:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) ) | kw= '<>' | kw= '?:' | kw= '<=>' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1664:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) ) | kw= '<>' | kw= '?:' | kw= '<=>' )
            int alt26=10;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1665:2: kw= '->'
                    {
                    kw=(Token)match(input,39,FOLLOW_39_in_ruleOpOther3975); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1672:2: kw= '..<'
                    {
                    kw=(Token)match(input,40,FOLLOW_40_in_ruleOpOther3994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1678:6: (kw= '>' kw= '..' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1678:6: (kw= '>' kw= '..' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1679:2: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,37,FOLLOW_37_in_ruleOpOther4014); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
                          
                    }
                    kw=(Token)match(input,41,FOLLOW_41_in_ruleOpOther4027); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1692:2: kw= '..'
                    {
                    kw=(Token)match(input,41,FOLLOW_41_in_ruleOpOther4047); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1699:2: kw= '=>'
                    {
                    kw=(Token)match(input,42,FOLLOW_42_in_ruleOpOther4066); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1705:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1705:6: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1706:2: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,37,FOLLOW_37_in_ruleOpOther4086); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:1: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==37) ) {
                        int LA24_1 = input.LA(2);

                        if ( (LA24_1==37) && (synpred8_InternalMokaDSL())) {
                            alt24=1;
                        }
                        else if ( (LA24_1==EOF||(LA24_1>=RULE_ID && LA24_1<=RULE_INT)||(LA24_1>=RULE_HEX && LA24_1<=RULE_DECIMAL)||LA24_1==20||LA24_1==22||(LA24_1>=24 && LA24_1<=25)||LA24_1==38||(LA24_1>=46 && LA24_1<=47)||LA24_1==52||(LA24_1>=58 && LA24_1<=59)||LA24_1==61||LA24_1==64||LA24_1==66||(LA24_1>=70 && LA24_1<=72)||(LA24_1>=75 && LA24_1<=84)) ) {
                            alt24=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 24, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:2: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:3: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1715:5: (kw= '>' kw= '>' )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1716:2: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,37,FOLLOW_37_in_ruleOpOther4117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,37,FOLLOW_37_in_ruleOpOther4130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1729:2: kw= '>'
                            {
                            kw=(Token)match(input,37,FOLLOW_37_in_ruleOpOther4151); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1735:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1735:6: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1736:2: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' )
                    {
                    kw=(Token)match(input,38,FOLLOW_38_in_ruleOpOther4173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:1: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' )
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==38) ) {
                        int LA25_1 = input.LA(2);

                        if ( (synpred9_InternalMokaDSL()) ) {
                            alt25=1;
                        }
                        else if ( (true) ) {
                            alt25=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 25, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 25, 0, input);

                        throw nvae;
                    }
                    switch (alt25) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:2: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:3: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1745:5: (kw= '<' kw= '<' )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1746:2: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,38,FOLLOW_38_in_ruleOpOther4204); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
                                  
                            }
                            kw=(Token)match(input,38,FOLLOW_38_in_ruleOpOther4217); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1759:2: kw= '<'
                            {
                            kw=(Token)match(input,38,FOLLOW_38_in_ruleOpOther4238); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1766:2: kw= '<>'
                    {
                    kw=(Token)match(input,43,FOLLOW_43_in_ruleOpOther4259); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1773:2: kw= '?:'
                    {
                    kw=(Token)match(input,44,FOLLOW_44_in_ruleOpOther4278); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1780:2: kw= '<=>'
                    {
                    kw=(Token)match(input,45,FOLLOW_45_in_ruleOpOther4297); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1793:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1794:2: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1795:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression4337);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXAdditiveExpression4347); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1802:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1805:28: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1806:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1806:1: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1807:5: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression4394);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMultiplicativeExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==46) ) {
                    int LA27_2 = input.LA(2);

                    if ( (synpred10_InternalMokaDSL()) ) {
                        alt27=1;
                    }


                }
                else if ( (LA27_0==47) ) {
                    int LA27_3 = input.LA(2);

                    if ( (synpred10_InternalMokaDSL()) ) {
                        alt27=1;
                    }


                }


                switch (alt27) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1820:6: ( () ( ( ruleOpAdd ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1820:7: () ( ( ruleOpAdd ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1820:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1821:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1826:2: ( ( ruleOpAdd ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1827:1: ( ruleOpAdd )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1827:1: ( ruleOpAdd )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1828:3: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression4447);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1841:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1842:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1842:1: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1843:3: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression4470);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1867:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1868:2: (iv_ruleOpAdd= ruleOpAdd EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1869:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_ruleOpAdd_in_entryRuleOpAdd4509);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpAdd4520); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1876:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1879:28: ( (kw= '+' | kw= '-' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1880:1: (kw= '+' | kw= '-' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1880:1: (kw= '+' | kw= '-' )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==46) ) {
                alt28=1;
            }
            else if ( (LA28_0==47) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1881:2: kw= '+'
                    {
                    kw=(Token)match(input,46,FOLLOW_46_in_ruleOpAdd4558); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1888:2: kw= '-'
                    {
                    kw=(Token)match(input,47,FOLLOW_47_in_ruleOpAdd4577); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1901:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1902:2: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1903:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression4617);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMultiplicativeExpression4627); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1910:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1913:28: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1914:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1914:1: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1915:5: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression4674);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XUnaryOperation_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop29:
            do {
                int alt29=2;
                switch ( input.LA(1) ) {
                case 48:
                    {
                    int LA29_2 = input.LA(2);

                    if ( (synpred11_InternalMokaDSL()) ) {
                        alt29=1;
                    }


                    }
                    break;
                case 49:
                    {
                    int LA29_3 = input.LA(2);

                    if ( (synpred11_InternalMokaDSL()) ) {
                        alt29=1;
                    }


                    }
                    break;
                case 50:
                    {
                    int LA29_4 = input.LA(2);

                    if ( (synpred11_InternalMokaDSL()) ) {
                        alt29=1;
                    }


                    }
                    break;
                case 51:
                    {
                    int LA29_5 = input.LA(2);

                    if ( (synpred11_InternalMokaDSL()) ) {
                        alt29=1;
                    }


                    }
                    break;

                }

                switch (alt29) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1928:6: ( () ( ( ruleOpMulti ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1928:7: () ( ( ruleOpMulti ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1928:7: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1929:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1934:2: ( ( ruleOpMulti ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1935:1: ( ruleOpMulti )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1935:1: ( ruleOpMulti )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1936:3: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression4727);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1949:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1950:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1950:1: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1951:3: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression4750);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rightOperand",
            	              		lv_rightOperand_3_0, 
            	              		"XUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1975:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1976:2: (iv_ruleOpMulti= ruleOpMulti EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1977:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_ruleOpMulti_in_entryRuleOpMulti4789);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpMulti4800); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1984:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1987:28: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1988:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1988:1: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt30=4;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt30=1;
                }
                break;
            case 49:
                {
                alt30=2;
                }
                break;
            case 50:
                {
                alt30=3;
                }
                break;
            case 51:
                {
                alt30=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1989:2: kw= '*'
                    {
                    kw=(Token)match(input,48,FOLLOW_48_in_ruleOpMulti4838); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1996:2: kw= '**'
                    {
                    kw=(Token)match(input,49,FOLLOW_49_in_ruleOpMulti4857); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2003:2: kw= '/'
                    {
                    kw=(Token)match(input,50,FOLLOW_50_in_ruleOpMulti4876); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2010:2: kw= '%'
                    {
                    kw=(Token)match(input,51,FOLLOW_51_in_ruleOpMulti4895); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2023:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2024:2: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2025:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation4935);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXUnaryOperation4945); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2032:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2035:28: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:1: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( ((LA31_0>=46 && LA31_0<=47)||LA31_0==52) ) {
                alt31=1;
            }
            else if ( ((LA31_0>=RULE_ID && LA31_0<=RULE_INT)||(LA31_0>=RULE_HEX && LA31_0<=RULE_DECIMAL)||LA31_0==20||LA31_0==22||(LA31_0>=24 && LA31_0<=25)||LA31_0==38||(LA31_0>=58 && LA31_0<=59)||LA31_0==61||LA31_0==64||LA31_0==66||(LA31_0>=70 && LA31_0<=72)||(LA31_0>=75 && LA31_0<=84)) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:2: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:3: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2036:3: ()
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2037:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2042:2: ( ( ruleOpUnary ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2043:1: ( ruleOpUnary )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2043:1: ( ruleOpUnary )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2044:3: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleOpUnary_in_ruleXUnaryOperation5003);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2057:2: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2058:1: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2058:1: (lv_operand_2_0= ruleXUnaryOperation )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2059:3: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation5024);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"XUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2077:5: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation5053);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCastedExpression_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2093:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2094:2: (iv_ruleOpUnary= ruleOpUnary EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2095:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_ruleOpUnary_in_entryRuleOpUnary5089);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOpUnary5100); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2102:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2105:28: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2106:1: (kw= '!' | kw= '-' | kw= '+' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2106:1: (kw= '!' | kw= '-' | kw= '+' )
            int alt32=3;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt32=1;
                }
                break;
            case 47:
                {
                alt32=2;
                }
                break;
            case 46:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2107:2: kw= '!'
                    {
                    kw=(Token)match(input,52,FOLLOW_52_in_ruleOpUnary5138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2114:2: kw= '-'
                    {
                    kw=(Token)match(input,47,FOLLOW_47_in_ruleOpUnary5157); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2121:2: kw= '+'
                    {
                    kw=(Token)match(input,46,FOLLOW_46_in_ruleOpUnary5176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2134:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2135:2: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2136:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression5216);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCastedExpression5226); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2143:1: ruleXCastedExpression returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XMemberFeatureCall_0 = null;

        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2146:28: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2147:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2147:1: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2148:5: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_ruleXCastedExpression5273);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XMemberFeatureCall_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:1: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==53) ) {
                    int LA33_2 = input.LA(2);

                    if ( (synpred12_InternalMokaDSL()) ) {
                        alt33=1;
                    }


                }


                switch (alt33) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:2: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:3: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2158:5: ( () otherlv_2= 'as' )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2158:6: () otherlv_2= 'as'
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2158:6: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2159:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,53,FOLLOW_53_in_ruleXCastedExpression5308); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	          
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2168:3: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2169:1: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2169:1: (lv_type_3_0= ruleJvmTypeReference )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2170:3: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression5331);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"type",
            	              		lv_type_3_0, 
            	              		"JvmTypeReference");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2194:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2195:2: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2196:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall5369);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXMemberFeatureCall5379); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2203:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2206:28: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2207:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2207:1: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2208:5: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall5426);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XPrimaryExpression_0; 
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:1: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop42:
            do {
                int alt42=3;
                switch ( input.LA(1) ) {
                case 54:
                    {
                    int LA42_2 = input.LA(2);

                    if ( (synpred13_InternalMokaDSL()) ) {
                        alt42=1;
                    }
                    else if ( (synpred14_InternalMokaDSL()) ) {
                        alt42=2;
                    }


                    }
                    break;
                case 55:
                    {
                    int LA42_3 = input.LA(2);

                    if ( (synpred13_InternalMokaDSL()) ) {
                        alt42=1;
                    }
                    else if ( (synpred14_InternalMokaDSL()) ) {
                        alt42=2;
                    }


                    }
                    break;
                case 56:
                    {
                    int LA42_4 = input.LA(2);

                    if ( (synpred14_InternalMokaDSL()) ) {
                        alt42=2;
                    }


                    }
                    break;

                }

                switch (alt42) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:2: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:3: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2229:25: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2229:26: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2229:26: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2230:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2235:2: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt34=2;
            	    int LA34_0 = input.LA(1);

            	    if ( (LA34_0==54) ) {
            	        alt34=1;
            	    }
            	    else if ( (LA34_0==55) ) {
            	        alt34=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 34, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt34) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2235:4: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,54,FOLLOW_54_in_ruleXMemberFeatureCall5498); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2240:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2240:6: ( (lv_explicitStatic_3_0= '::' ) )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2241:1: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2241:1: (lv_explicitStatic_3_0= '::' )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2242:3: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,55,FOLLOW_55_in_ruleXMemberFeatureCall5522); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2255:3: ( ( ruleFeatureCallID ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2256:1: ( ruleFeatureCallID )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2256:1: ( ruleFeatureCallID )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2257:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall5559);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall5575);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2278:3: ( (lv_value_6_0= ruleXAssignment ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2279:1: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2279:1: (lv_value_6_0= ruleXAssignment )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2280:3: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall5597);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"value",
            	              		lv_value_6_0, 
            	              		"XAssignment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:6: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleFeatureCallID ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:7: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2313:7: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2313:8: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2313:8: ()
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2314:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2319:2: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt35=3;
            	    switch ( input.LA(1) ) {
            	    case 54:
            	        {
            	        alt35=1;
            	        }
            	        break;
            	    case 56:
            	        {
            	        alt35=2;
            	        }
            	        break;
            	    case 55:
            	        {
            	        alt35=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 35, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt35) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2319:4: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,54,FOLLOW_54_in_ruleXMemberFeatureCall5683); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2324:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2324:6: ( (lv_nullSafe_9_0= '?.' ) )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2325:1: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2325:1: (lv_nullSafe_9_0= '?.' )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2326:3: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,56,FOLLOW_56_in_ruleXMemberFeatureCall5707); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "nullSafe", true, "?.");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2340:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2340:6: ( (lv_explicitStatic_10_0= '::' ) )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2341:1: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2341:1: (lv_explicitStatic_10_0= '::' )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2342:3: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,55,FOLLOW_55_in_ruleXMemberFeatureCall5744); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitStatic", true, "::");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2355:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt37=2;
            	    int LA37_0 = input.LA(1);

            	    if ( (LA37_0==38) ) {
            	        alt37=1;
            	    }
            	    switch (alt37) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2355:7: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,38,FOLLOW_38_in_ruleXMemberFeatureCall5773); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	                  
            	            }
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2359:1: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2360:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2360:1: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2361:3: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5794);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"typeArguments",
            	                      		lv_typeArguments_12_0, 
            	                      		"JvmArgumentTypeReference");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }

            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2377:2: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop36:
            	            do {
            	                int alt36=2;
            	                int LA36_0 = input.LA(1);

            	                if ( (LA36_0==57) ) {
            	                    alt36=1;
            	                }


            	                switch (alt36) {
            	            	case 1 :
            	            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2377:4: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,57,FOLLOW_57_in_ruleXMemberFeatureCall5807); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	          	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	          
            	            	    }
            	            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2381:1: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2382:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2382:1: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2383:3: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {
            	            	       
            	            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
            	            	      	    
            	            	    }
            	            	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5828);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      	        if (current==null) {
            	            	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      	        }
            	            	             		add(
            	            	             			current, 
            	            	             			"typeArguments",
            	            	              		lv_typeArguments_14_0, 
            	            	              		"JvmArgumentTypeReference");
            	            	      	        afterParserOrEnumRuleCall();
            	            	      	    
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop36;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,37,FOLLOW_37_in_ruleXMemberFeatureCall5842); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2403:3: ( ( ruleFeatureCallID ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2404:1: ( ruleFeatureCallID )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2404:1: ( ruleFeatureCallID )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2405:3: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall5867);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2418:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt40=2;
            	    alt40 = dfa40.predict(input);
            	    switch (alt40) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2418:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2418:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2418:4: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2425:1: (lv_explicitOperationCall_17_0= '(' )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2426:3: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,20,FOLLOW_20_in_ruleXMemberFeatureCall5901); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              	    
            	            }

            	            }


            	            }

            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt39=3;
            	            alt39 = dfa39.predict(input);
            	            switch (alt39) {
            	                case 1 :
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2456:1: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2457:3: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall5986);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_18_0, 
            	                              		"XShortClosure");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2474:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2474:6: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2474:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2474:7: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2475:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2475:1: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2476:3: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {
            	                       
            	                      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
            	                      	    
            	                    }
            	                    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall6014);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      	        if (current==null) {
            	                      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      	        }
            	                             		add(
            	                             			current, 
            	                             			"memberCallArguments",
            	                              		lv_memberCallArguments_19_0, 
            	                              		"XExpression");
            	                      	        afterParserOrEnumRuleCall();
            	                      	    
            	                    }

            	                    }


            	                    }

            	                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2492:2: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop38:
            	                    do {
            	                        int alt38=2;
            	                        int LA38_0 = input.LA(1);

            	                        if ( (LA38_0==57) ) {
            	                            alt38=1;
            	                        }


            	                        switch (alt38) {
            	                    	case 1 :
            	                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2492:4: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,57,FOLLOW_57_in_ruleXMemberFeatureCall6027); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	          	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	          
            	                    	    }
            	                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2496:1: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2497:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2497:1: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2498:3: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {
            	                    	       
            	                    	      	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
            	                    	      	    
            	                    	    }
            	                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall6048);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      	        if (current==null) {
            	                    	      	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      	        }
            	                    	             		add(
            	                    	             			current, 
            	                    	             			"memberCallArguments",
            	                    	              		lv_memberCallArguments_21_0, 
            	                    	              		"XExpression");
            	                    	      	        afterParserOrEnumRuleCall();
            	                    	      	    
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop38;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleXMemberFeatureCall6065); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	                  
            	            }

            	            }
            	            break;

            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt41=2;
            	    alt41 = dfa41.predict(input);
            	    switch (alt41) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:4: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2521:1: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2522:3: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
            	              	    
            	            }
            	            pushFollow(FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall6100);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"memberCallArguments",
            	                      		lv_memberCallArguments_23_0, 
            	                      		"XClosure");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2546:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2547:2: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2548:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression6140);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXPrimaryExpression6150); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2555:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | this_XFeatureCall_3= ruleXFeatureCall | this_XLiteral_4= ruleXLiteral | this_XIfExpression_5= ruleXIfExpression | this_XForLoopExpression_6= ruleXForLoopExpression | this_XWhileExpression_7= ruleXWhileExpression | this_XDoWhileExpression_8= ruleXDoWhileExpression | this_XThrowExpression_9= ruleXThrowExpression | this_XReturnExpression_10= ruleXReturnExpression | this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_12= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XFeatureCall_3 = null;

        EObject this_XLiteral_4 = null;

        EObject this_XIfExpression_5 = null;

        EObject this_XForLoopExpression_6 = null;

        EObject this_XWhileExpression_7 = null;

        EObject this_XDoWhileExpression_8 = null;

        EObject this_XThrowExpression_9 = null;

        EObject this_XReturnExpression_10 = null;

        EObject this_XTryCatchFinallyExpression_11 = null;

        EObject this_XParenthesizedExpression_12 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2558:28: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | this_XFeatureCall_3= ruleXFeatureCall | this_XLiteral_4= ruleXLiteral | this_XIfExpression_5= ruleXIfExpression | this_XForLoopExpression_6= ruleXForLoopExpression | this_XWhileExpression_7= ruleXWhileExpression | this_XDoWhileExpression_8= ruleXDoWhileExpression | this_XThrowExpression_9= ruleXThrowExpression | this_XReturnExpression_10= ruleXReturnExpression | this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_12= ruleXParenthesizedExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2559:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | this_XFeatureCall_3= ruleXFeatureCall | this_XLiteral_4= ruleXLiteral | this_XIfExpression_5= ruleXIfExpression | this_XForLoopExpression_6= ruleXForLoopExpression | this_XWhileExpression_7= ruleXWhileExpression | this_XDoWhileExpression_8= ruleXDoWhileExpression | this_XThrowExpression_9= ruleXThrowExpression | this_XReturnExpression_10= ruleXReturnExpression | this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_12= ruleXParenthesizedExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2559:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | this_XFeatureCall_3= ruleXFeatureCall | this_XLiteral_4= ruleXLiteral | this_XIfExpression_5= ruleXIfExpression | this_XForLoopExpression_6= ruleXForLoopExpression | this_XWhileExpression_7= ruleXWhileExpression | this_XDoWhileExpression_8= ruleXDoWhileExpression | this_XThrowExpression_9= ruleXThrowExpression | this_XReturnExpression_10= ruleXReturnExpression | this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_12= ruleXParenthesizedExpression )
            int alt43=13;
            alt43 = dfa43.predict(input);
            switch (alt43) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2560:5: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression6197);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XConstructorCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2570:5: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression6224);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBlockExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2580:5: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression6251);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSwitchExpression_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2590:5: this_XFeatureCall_3= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression6278);
                    this_XFeatureCall_3=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFeatureCall_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2600:5: this_XLiteral_4= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression6305);
                    this_XLiteral_4=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XLiteral_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2610:5: this_XIfExpression_5= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression6332);
                    this_XIfExpression_5=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XIfExpression_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2620:5: this_XForLoopExpression_6= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression6359);
                    this_XForLoopExpression_6=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XForLoopExpression_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2630:5: this_XWhileExpression_7= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression6386);
                    this_XWhileExpression_7=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XWhileExpression_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2640:5: this_XDoWhileExpression_8= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression6413);
                    this_XDoWhileExpression_8=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XDoWhileExpression_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2650:5: this_XThrowExpression_9= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression6440);
                    this_XThrowExpression_9=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XThrowExpression_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2660:5: this_XReturnExpression_10= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression6467);
                    this_XReturnExpression_10=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XReturnExpression_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2670:5: this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression6494);
                    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTryCatchFinallyExpression_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2680:5: this_XParenthesizedExpression_12= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression6521);
                    this_XParenthesizedExpression_12=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XParenthesizedExpression_12; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2696:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2697:2: (iv_ruleXLiteral= ruleXLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2698:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXLiteral_in_entryRuleXLiteral6556);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXLiteral6566); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2705:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2708:28: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2709:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2709:1: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt44=7;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==58) ) {
                alt44=1;
            }
            else if ( (LA44_0==61) && (synpred18_InternalMokaDSL())) {
                alt44=2;
            }
            else if ( ((LA44_0>=79 && LA44_0<=80)) ) {
                alt44=3;
            }
            else if ( (LA44_0==RULE_INT||(LA44_0>=RULE_HEX && LA44_0<=RULE_DECIMAL)) ) {
                alt44=4;
            }
            else if ( (LA44_0==24) ) {
                alt44=5;
            }
            else if ( (LA44_0==RULE_STRING) ) {
                alt44=6;
            }
            else if ( (LA44_0==81) ) {
                alt44=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2710:5: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral6613);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XCollectionLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:6: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:7: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXLiteral6653);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XClosure_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2732:5: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral6681);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XBooleanLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2742:5: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNumberLiteral_in_ruleXLiteral6708);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNumberLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2752:5: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXNullLiteral_in_ruleXLiteral6735);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XNullLiteral_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2762:5: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXStringLiteral_in_ruleXLiteral6762);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XStringLiteral_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2772:5: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXTypeLiteral_in_ruleXLiteral6789);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XTypeLiteral_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2788:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2789:2: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2790:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral6824);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCollectionLiteral6834); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2797:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2800:28: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2801:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2801:1: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==58) ) {
                int LA45_1 = input.LA(2);

                if ( (LA45_1==59) ) {
                    alt45=1;
                }
                else if ( (LA45_1==61) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2802:5: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral6881);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XSetLiteral_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2812:5: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral6908);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XListLiteral_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2828:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2829:2: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2830:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral6943);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSetLiteral6953); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2837:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2840:28: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2841:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2841:1: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2841:2: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2841:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2842:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,58,FOLLOW_58_in_ruleXSetLiteral6999); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,59,FOLLOW_59_in_ruleXSetLiteral7011); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2855:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=RULE_ID && LA47_0<=RULE_INT)||(LA47_0>=RULE_HEX && LA47_0<=RULE_DECIMAL)||LA47_0==20||LA47_0==22||(LA47_0>=24 && LA47_0<=25)||LA47_0==38||(LA47_0>=46 && LA47_0<=47)||LA47_0==52||(LA47_0>=58 && LA47_0<=59)||LA47_0==61||LA47_0==64||LA47_0==66||(LA47_0>=70 && LA47_0<=72)||(LA47_0>=75 && LA47_0<=84)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2855:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2855:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2856:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2856:1: (lv_elements_3_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2857:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral7033);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2873:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==57) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2873:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,57,FOLLOW_57_in_ruleXSetLiteral7046); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2877:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2878:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2878:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2879:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXSetLiteral7067);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,60,FOLLOW_60_in_ruleXSetLiteral7083); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2907:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2908:2: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2909:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral7119);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXListLiteral7129); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2916:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2919:28: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2920:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2920:1: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2920:2: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2920:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2921:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,58,FOLLOW_58_in_ruleXListLiteral7175); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,61,FOLLOW_61_in_ruleXListLiteral7187); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2934:1: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_ID && LA49_0<=RULE_INT)||(LA49_0>=RULE_HEX && LA49_0<=RULE_DECIMAL)||LA49_0==20||LA49_0==22||(LA49_0>=24 && LA49_0<=25)||LA49_0==38||(LA49_0>=46 && LA49_0<=47)||LA49_0==52||(LA49_0>=58 && LA49_0<=59)||LA49_0==61||LA49_0==64||LA49_0==66||(LA49_0>=70 && LA49_0<=72)||(LA49_0>=75 && LA49_0<=84)) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2934:2: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2934:2: ( (lv_elements_3_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2935:1: (lv_elements_3_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2935:1: (lv_elements_3_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2936:3: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral7209);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2952:2: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==57) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2952:4: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,57,FOLLOW_57_in_ruleXListLiteral7222); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2956:1: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2957:1: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2957:1: (lv_elements_5_0= ruleXExpression )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2958:3: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXExpression_in_ruleXListLiteral7243);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_5_0, 
                    	              		"XExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,62,FOLLOW_62_in_ruleXListLiteral7259); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2986:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2987:2: (iv_ruleXClosure= ruleXClosure EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2988:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXClosure_in_entryRuleXClosure7295);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXClosure7305); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2995:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2998:28: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2999:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2999:1: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2999:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2999:2: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2999:3: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3001:5: ( () otherlv_1= '[' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3001:6: () otherlv_1= '['
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3001:6: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3002:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,61,FOLLOW_61_in_ruleXClosure7365); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
                  
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3026:6: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3026:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3026:7: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==RULE_ID||LA51_0==20||LA51_0==42) ) {
                        alt51=1;
                    }
                    switch (alt51) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3026:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3026:8: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3027:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3027:1: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3028:3: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure7438);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"declaredFormalParameters",
                                      		lv_declaredFormalParameters_2_0, 
                                      		"JvmFormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3044:2: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop50:
                            do {
                                int alt50=2;
                                int LA50_0 = input.LA(1);

                                if ( (LA50_0==57) ) {
                                    alt50=1;
                                }


                                switch (alt50) {
                            	case 1 :
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3044:4: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,57,FOLLOW_57_in_ruleXClosure7451); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	          
                            	    }
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3048:1: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3049:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3049:1: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3050:3: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXClosure7472);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredFormalParameters",
                            	              		lv_declaredFormalParameters_4_0, 
                            	              		"JvmFormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop50;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3066:6: ( (lv_explicitSyntax_5_0= '|' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3067:1: (lv_explicitSyntax_5_0= '|' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3067:1: (lv_explicitSyntax_5_0= '|' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3068:3: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,63,FOLLOW_63_in_ruleXClosure7494); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXClosureRule());
                      	        }
                             		setWithLastConsumed(current, "explicitSyntax", true, "|");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3081:5: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3082:1: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3082:1: (lv_expression_6_0= ruleXExpressionInClosure )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3083:3: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_ruleXClosure7531);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_6_0, 
                      		"XExpressionInClosure");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,62,FOLLOW_62_in_ruleXClosure7543); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3111:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3112:2: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3113:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure7579);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionInClosure7589); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3120:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3123:28: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3124:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3124:1: ( () ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3124:2: () ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )*
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3124:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3125:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3130:2: ( ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )? )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=RULE_ID && LA54_0<=RULE_INT)||(LA54_0>=RULE_HEX && LA54_0<=RULE_DECIMAL)||LA54_0==20||LA54_0==22||(LA54_0>=24 && LA54_0<=25)||LA54_0==38||(LA54_0>=46 && LA54_0<=47)||LA54_0==52||(LA54_0>=58 && LA54_0<=59)||LA54_0==61||LA54_0==64||LA54_0==66||(LA54_0>=70 && LA54_0<=84)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3130:3: ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) ) (otherlv_2= ';' )?
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3130:3: ( (lv_expressions_1_0= ruleXExpressionInsideBlock ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3131:1: (lv_expressions_1_0= ruleXExpressionInsideBlock )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3131:1: (lv_expressions_1_0= ruleXExpressionInsideBlock )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3132:3: lv_expressions_1_0= ruleXExpressionInsideBlock
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_ruleXExpressionInClosure7645);
            	    lv_expressions_1_0=ruleXExpressionInsideBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_1_0, 
            	              		"XExpressionInsideBlock");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3148:2: (otherlv_2= ';' )?
            	    int alt53=2;
            	    int LA53_0 = input.LA(1);

            	    if ( (LA53_0==15) ) {
            	        alt53=1;
            	    }
            	    switch (alt53) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3148:4: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,15,FOLLOW_15_in_ruleXExpressionInClosure7658); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3160:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3161:2: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3162:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure7698);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXShortClosure7708); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3169:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3172:28: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3173:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3173:1: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3173:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3173:2: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3173:3: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3189:6: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3189:7: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3189:7: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3190:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3195:2: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_ID||LA56_0==20||LA56_0==42) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3195:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3195:3: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3196:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3196:1: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3197:3: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7816);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      	        }
                             		add(
                             			current, 
                             			"declaredFormalParameters",
                              		lv_declaredFormalParameters_1_0, 
                              		"JvmFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3213:2: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==57) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3213:4: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,57,FOLLOW_57_in_ruleXShortClosure7829); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3217:1: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3218:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3218:1: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3219:3: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7850);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredFormalParameters",
                    	              		lv_declaredFormalParameters_3_0, 
                    	              		"JvmFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3235:6: ( (lv_explicitSyntax_4_0= '|' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3236:1: (lv_explicitSyntax_4_0= '|' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3236:1: (lv_explicitSyntax_4_0= '|' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3237:3: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,63,FOLLOW_63_in_ruleXShortClosure7872); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXShortClosureRule());
              	        }
                     		setWithLastConsumed(current, "explicitSyntax", true, "|");
              	    
            }

            }


            }


            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3250:4: ( (lv_expression_5_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3251:1: (lv_expression_5_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3251:1: (lv_expression_5_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3252:3: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXShortClosure7908);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3276:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3277:2: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3278:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression7944);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXParenthesizedExpression7954); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3285:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3288:28: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3289:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3289:1: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3289:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,20,FOLLOW_20_in_ruleXParenthesizedExpression7991); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression8013);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_XExpression_1; 
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,21,FOLLOW_21_in_ruleXParenthesizedExpression8024); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3314:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3315:2: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3316:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression8060);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXIfExpression8070); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3323:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3326:28: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3327:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3327:1: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3327:2: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3327:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3328:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,64,FOLLOW_64_in_ruleXIfExpression8116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,20,FOLLOW_20_in_ruleXIfExpression8128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3341:1: ( (lv_if_3_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3342:1: (lv_if_3_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3342:1: (lv_if_3_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3343:3: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression8149);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleXIfExpression8161); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3363:1: ( (lv_then_5_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3364:1: (lv_then_5_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3364:1: (lv_then_5_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3365:3: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression8182);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:2: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==65) ) {
                int LA57_1 = input.LA(2);

                if ( (synpred22_InternalMokaDSL()) ) {
                    alt57=1;
                }
            }
            switch (alt57) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:3: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:3: ( ( 'else' )=>otherlv_6= 'else' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:4: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,65,FOLLOW_65_in_ruleXIfExpression8203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3386:2: ( (lv_else_7_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3387:1: (lv_else_7_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3387:1: (lv_else_7_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3388:3: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXIfExpression8225);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3412:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3413:2: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3414:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression8263);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXSwitchExpression8273); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3421:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )+ (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_localVarName_2_0 = null;

        EObject lv_switch_4_0 = null;

        AntlrDatatypeRuleToken lv_localVarName_6_0 = null;

        EObject lv_switch_8_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3424:28: ( ( () otherlv_1= 'switch' ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )+ (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3425:1: ( () otherlv_1= 'switch' ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )+ (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3425:1: ( () otherlv_1= 'switch' ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )+ (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3425:2: () otherlv_1= 'switch' ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )+ (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3425:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3426:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,66,FOLLOW_66_in_ruleXSwitchExpression8319); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:1: ( ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) ) | ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_ID && LA59_0<=RULE_INT)||(LA59_0>=RULE_HEX && LA59_0<=RULE_DECIMAL)||LA59_0==22||(LA59_0>=24 && LA59_0<=25)||LA59_0==38||(LA59_0>=46 && LA59_0<=47)||LA59_0==52||(LA59_0>=58 && LA59_0<=59)||LA59_0==61||LA59_0==64||LA59_0==66||(LA59_0>=70 && LA59_0<=72)||(LA59_0>=75 && LA59_0<=84)) ) {
                alt59=1;
            }
            else if ( (LA59_0==20) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_ID) ) {
                    int LA59_3 = input.LA(3);

                    if ( (LA59_3==18||(LA59_3>=20 && LA59_3<=21)||(LA59_3>=26 && LA59_3<=51)||(LA59_3>=53 && LA59_3<=56)||LA59_3==61) ) {
                        alt59=1;
                    }
                    else if ( (LA59_3==67) && (synpred24_InternalMokaDSL())) {
                        alt59=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 3, input);

                        throw nvae;
                    }
                }
                else if ( ((LA59_2>=RULE_STRING && LA59_2<=RULE_INT)||(LA59_2>=RULE_HEX && LA59_2<=RULE_DECIMAL)||LA59_2==20||LA59_2==22||(LA59_2>=24 && LA59_2<=25)||LA59_2==38||(LA59_2>=46 && LA59_2<=47)||LA59_2==52||(LA59_2>=58 && LA59_2<=59)||LA59_2==61||LA59_2==64||LA59_2==66||(LA59_2>=70 && LA59_2<=72)||(LA59_2>=75 && LA59_2<=84)) ) {
                    alt59=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:2: ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:2: ( ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:3: ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )? ( (lv_switch_4_0= ruleXExpression ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:3: ( ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' ) )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==RULE_ID) ) {
                        int LA58_1 = input.LA(2);

                        if ( (LA58_1==67) && (synpred23_InternalMokaDSL())) {
                            alt58=1;
                        }
                    }
                    switch (alt58) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:4: ( ( ( ( ruleValidID ) ) ':' ) )=> ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3440:5: ( ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':' )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3440:6: ( (lv_localVarName_2_0= ruleValidID ) ) otherlv_3= ':'
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3440:6: ( (lv_localVarName_2_0= ruleValidID ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3441:1: (lv_localVarName_2_0= ruleValidID )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3441:1: (lv_localVarName_2_0= ruleValidID )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3442:3: lv_localVarName_2_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleValidID_in_ruleXSwitchExpression8362);
                            lv_localVarName_2_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"localVarName",
                                      		lv_localVarName_2_0, 
                                      		"ValidID");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,67,FOLLOW_67_in_ruleXSwitchExpression8374); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
                                  
                            }

                            }


                            }
                            break;

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3462:4: ( (lv_switch_4_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3463:1: (lv_switch_4_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3463:1: (lv_switch_4_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3464:3: lv_switch_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression8398);
                    lv_switch_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_4_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:6: ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:6: ( ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:7: ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) ) ( (lv_switch_8_0= ruleXExpression ) ) otherlv_9= ')'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:7: ( ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:8: ( ( '(' ( ( ruleValidID ) ) ':' ) )=> (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3487:5: (otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3487:7: otherlv_5= '(' ( (lv_localVarName_6_0= ruleValidID ) ) otherlv_7= ':'
                    {
                    otherlv_5=(Token)match(input,20,FOLLOW_20_in_ruleXSwitchExpression8442); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3491:1: ( (lv_localVarName_6_0= ruleValidID ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3492:1: (lv_localVarName_6_0= ruleValidID )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3492:1: (lv_localVarName_6_0= ruleValidID )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3493:3: lv_localVarName_6_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXSwitchExpression8463);
                    lv_localVarName_6_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"localVarName",
                              		lv_localVarName_6_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,67,FOLLOW_67_in_ruleXSwitchExpression8475); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
                          
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3513:3: ( (lv_switch_8_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3514:1: (lv_switch_8_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3514:1: (lv_switch_8_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3515:3: lv_switch_8_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression8498);
                    lv_switch_8_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"switch",
                              		lv_switch_8_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,21,FOLLOW_21_in_ruleXSwitchExpression8510); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
                          
                    }

                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,59,FOLLOW_59_in_ruleXSwitchExpression8524); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3539:1: ( (lv_cases_11_0= ruleXCasePart ) )+
            int cnt60=0;
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_ID||LA60_0==20||LA60_0==42||LA60_0==67||LA60_0==69) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3540:1: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3540:1: (lv_cases_11_0= ruleXCasePart )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3541:3: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXCasePart_in_ruleXSwitchExpression8545);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_11_0, 
            	              		"XCasePart");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3557:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==68) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3557:5: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,68,FOLLOW_68_in_ruleXSwitchExpression8559); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                          
                    }
                    otherlv_13=(Token)match(input,67,FOLLOW_67_in_ruleXSwitchExpression8571); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3565:1: ( (lv_default_14_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3566:1: (lv_default_14_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3566:1: (lv_default_14_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3567:3: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXSwitchExpression8592);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"default",
                              		lv_default_14_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,60,FOLLOW_60_in_ruleXSwitchExpression8606); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3595:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3596:2: (iv_ruleXCasePart= ruleXCasePart EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3597:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_ruleXCasePart_in_entryRuleXCasePart8642);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCasePart8652); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3604:1: ruleXCasePart returns [EObject current=null] : ( ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )? (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )? otherlv_3= ':' ( (lv_then_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_typeGuard_0_0 = null;

        EObject lv_case_2_0 = null;

        EObject lv_then_4_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3607:28: ( ( ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )? (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )? otherlv_3= ':' ( (lv_then_4_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3608:1: ( ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )? (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )? otherlv_3= ':' ( (lv_then_4_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3608:1: ( ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )? (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )? otherlv_3= ':' ( (lv_then_4_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3608:2: ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )? (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )? otherlv_3= ':' ( (lv_then_4_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3608:2: ( (lv_typeGuard_0_0= ruleJvmTypeReference ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||LA62_0==20||LA62_0==42) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3609:1: (lv_typeGuard_0_0= ruleJvmTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3609:1: (lv_typeGuard_0_0= ruleJvmTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3610:3: lv_typeGuard_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXCasePart8698);
                    lv_typeGuard_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"typeGuard",
                              		lv_typeGuard_0_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3626:3: (otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==69) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3626:5: otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) )
                    {
                    otherlv_1=(Token)match(input,69,FOLLOW_69_in_ruleXCasePart8712); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3630:1: ( (lv_case_2_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3631:1: (lv_case_2_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3631:1: (lv_case_2_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3632:3: lv_case_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart8733);
                    lv_case_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      	        }
                             		set(
                             			current, 
                             			"case",
                              		lv_case_2_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,67,FOLLOW_67_in_ruleXCasePart8747); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3652:1: ( (lv_then_4_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3653:1: (lv_then_4_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3653:1: (lv_then_4_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3654:3: lv_then_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXCasePart8768);
            lv_then_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCasePartRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_4_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3678:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3679:2: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3680:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression8804);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXForLoopExpression8814); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3687:1: ruleXForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3690:28: ( ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3691:1: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3691:1: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3691:2: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3691:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3692:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_70_in_ruleXForLoopExpression8860); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,20,FOLLOW_20_in_ruleXForLoopExpression8872); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3705:1: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3706:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3706:1: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3707:3: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression8893);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_3_0, 
                      		"JvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,67,FOLLOW_67_in_ruleXForLoopExpression8905); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3727:1: ( (lv_forExpression_5_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3728:1: (lv_forExpression_5_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3728:1: (lv_forExpression_5_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3729:3: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression8926);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"forExpression",
                      		lv_forExpression_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleXForLoopExpression8938); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3749:1: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3750:1: (lv_eachExpression_7_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3750:1: (lv_eachExpression_7_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3751:3: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXForLoopExpression8959);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"eachExpression",
                      		lv_eachExpression_7_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3775:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3776:2: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3777:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression8995);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXWhileExpression9005); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3784:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3787:28: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3788:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3788:1: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3788:2: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3788:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3789:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_71_in_ruleXWhileExpression9051); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,20,FOLLOW_20_in_ruleXWhileExpression9063); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3802:1: ( (lv_predicate_3_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3803:1: (lv_predicate_3_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3803:1: (lv_predicate_3_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3804:3: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression9084);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_3_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleXWhileExpression9096); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3824:1: ( (lv_body_5_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3825:1: (lv_body_5_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3825:1: (lv_body_5_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3826:3: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXWhileExpression9117);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3850:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3851:2: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3852:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression9153);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXDoWhileExpression9163); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3859:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3862:28: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3863:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3863:1: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3863:2: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3863:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3864:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_72_in_ruleXDoWhileExpression9209); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3873:1: ( (lv_body_2_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3874:1: (lv_body_2_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3874:1: (lv_body_2_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3875:3: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression9230);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,71,FOLLOW_71_in_ruleXDoWhileExpression9242); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,20,FOLLOW_20_in_ruleXDoWhileExpression9254); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3899:1: ( (lv_predicate_5_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3900:1: (lv_predicate_5_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3900:1: (lv_predicate_5_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3901:3: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXDoWhileExpression9275);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"predicate",
                      		lv_predicate_5_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleXDoWhileExpression9287); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3929:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3930:2: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3931:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression9323);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBlockExpression9333); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3938:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3941:28: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3942:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3942:1: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3942:2: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3942:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3943:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,59,FOLLOW_59_in_ruleXBlockExpression9379); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3952:1: ( ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )? )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( ((LA65_0>=RULE_ID && LA65_0<=RULE_INT)||(LA65_0>=RULE_HEX && LA65_0<=RULE_DECIMAL)||LA65_0==20||LA65_0==22||(LA65_0>=24 && LA65_0<=25)||LA65_0==38||(LA65_0>=46 && LA65_0<=47)||LA65_0==52||(LA65_0>=58 && LA65_0<=59)||LA65_0==61||LA65_0==64||LA65_0==66||(LA65_0>=70 && LA65_0<=84)) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3952:2: ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) ) (otherlv_3= ';' )?
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3952:2: ( (lv_expressions_2_0= ruleXExpressionInsideBlock ) )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3953:1: (lv_expressions_2_0= ruleXExpressionInsideBlock )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3953:1: (lv_expressions_2_0= ruleXExpressionInsideBlock )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3954:3: lv_expressions_2_0= ruleXExpressionInsideBlock
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_ruleXBlockExpression9401);
            	    lv_expressions_2_0=ruleXExpressionInsideBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"expressions",
            	              		lv_expressions_2_0, 
            	              		"XExpressionInsideBlock");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3970:2: (otherlv_3= ';' )?
            	    int alt64=2;
            	    int LA64_0 = input.LA(1);

            	    if ( (LA64_0==15) ) {
            	        alt64=1;
            	    }
            	    switch (alt64) {
            	        case 1 :
            	            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3970:4: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,15,FOLLOW_15_in_ruleXBlockExpression9414); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            otherlv_4=(Token)match(input,60,FOLLOW_60_in_ruleXBlockExpression9430); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionInsideBlock"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3986:1: entryRuleXExpressionInsideBlock returns [EObject current=null] : iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF ;
    public final EObject entryRuleXExpressionInsideBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInsideBlock = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3987:2: (iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3988:2: iv_ruleXExpressionInsideBlock= ruleXExpressionInsideBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); 
            }
            pushFollow(FOLLOW_ruleXExpressionInsideBlock_in_entryRuleXExpressionInsideBlock9466);
            iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInsideBlock; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXExpressionInsideBlock9476); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInsideBlock"


    // $ANTLR start "ruleXExpressionInsideBlock"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3995:1: ruleXExpressionInsideBlock returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionInsideBlock() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3998:28: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3999:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3999:1: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=73 && LA66_0<=74)) ) {
                alt66=1;
            }
            else if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_INT)||(LA66_0>=RULE_HEX && LA66_0<=RULE_DECIMAL)||LA66_0==20||LA66_0==22||(LA66_0>=24 && LA66_0<=25)||LA66_0==38||(LA66_0>=46 && LA66_0<=47)||LA66_0==52||(LA66_0>=58 && LA66_0<=59)||LA66_0==61||LA66_0==64||LA66_0==66||(LA66_0>=70 && LA66_0<=72)||(LA66_0>=75 && LA66_0<=84)) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4000:5: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionInsideBlock9523);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XVariableDeclaration_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4010:5: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXExpressionInsideBlock9550);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XExpression_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInsideBlock"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4026:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4027:2: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4028:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration9585);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXVariableDeclaration9595); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4035:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4038:28: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4039:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4039:1: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4039:2: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4039:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4040:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4045:2: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==73) ) {
                alt67=1;
            }
            else if ( (LA67_0==74) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4045:3: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4045:3: ( (lv_writeable_1_0= 'var' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4046:1: (lv_writeable_1_0= 'var' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4046:1: (lv_writeable_1_0= 'var' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4047:3: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,73,FOLLOW_73_in_ruleXVariableDeclaration9648); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "writeable", true, "var");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4061:7: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,74,FOLLOW_74_in_ruleXVariableDeclaration9679); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:2: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_ID) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred25_InternalMokaDSL()) ) {
                    alt68=1;
                }
                else if ( (true) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA68_0==20) && (synpred25_InternalMokaDSL())) {
                alt68=1;
            }
            else if ( (LA68_0==42) && (synpred25_InternalMokaDSL())) {
                alt68=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:3: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4073:6: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4073:7: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4073:7: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4074:1: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4074:1: (lv_type_3_0= ruleJvmTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4075:3: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration9727);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_3_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4091:2: ( (lv_name_4_0= ruleValidID ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4092:1: (lv_name_4_0= ruleValidID )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4092:1: (lv_name_4_0= ruleValidID )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4093:3: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration9748);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4110:6: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4110:6: ( (lv_name_5_0= ruleValidID ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4111:1: (lv_name_5_0= ruleValidID )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4111:1: (lv_name_5_0= ruleValidID )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4112:3: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleXVariableDeclaration9777);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_5_0, 
                              		"ValidID");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4128:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==18) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4128:5: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,18,FOLLOW_18_in_ruleXVariableDeclaration9791); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4132:1: ( (lv_right_7_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4133:1: (lv_right_7_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4133:1: (lv_right_7_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4134:3: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXVariableDeclaration9812);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"right",
                              		lv_right_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4158:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4159:2: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4160:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter9850);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmFormalParameter9860); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4167:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4170:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4171:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4171:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4171:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4171:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ID) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==RULE_ID||LA70_1==38||LA70_1==54||LA70_1==61) ) {
                    alt70=1;
                }
            }
            else if ( (LA70_0==20||LA70_0==42) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4172:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4172:1: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4173:3: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter9906);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"parameterType",
                              		lv_parameterType_0_0, 
                              		"JvmTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4189:3: ( (lv_name_1_0= ruleValidID ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4190:1: (lv_name_1_0= ruleValidID )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4190:1: (lv_name_1_0= ruleValidID )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4191:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleJvmFormalParameter9928);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4215:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4216:2: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4217:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter9964);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFullJvmFormalParameter9974); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4224:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4227:28: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4228:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4228:1: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4228:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4228:2: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4229:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4229:1: (lv_parameterType_0_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4230:3: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter10020);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"parameterType",
                      		lv_parameterType_0_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4246:2: ( (lv_name_1_0= ruleValidID ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4247:1: (lv_name_1_0= ruleValidID )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4247:1: (lv_name_1_0= ruleValidID )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4248:3: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter10041);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ValidID");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4272:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4273:2: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4274:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall10077);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFeatureCall10087); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4281:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4284:28: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4285:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4285:1: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4285:2: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4285:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4286:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4291:2: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==38) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4291:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleXFeatureCall10134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4295:1: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4296:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4296:1: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4297:3: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall10155);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4313:2: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==57) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4313:4: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,57,FOLLOW_57_in_ruleXFeatureCall10168); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4317:1: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4318:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4318:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4319:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall10189);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,37,FOLLOW_37_in_ruleXFeatureCall10203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4339:3: ( ( ruleIdOrSuper ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4340:1: ( ruleIdOrSuper )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4340:1: ( ruleIdOrSuper )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4341:3: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXFeatureCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall10228);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4354:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4354:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4354:3: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4354:4: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4361:1: (lv_explicitOperationCall_7_0= '(' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4362:3: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,20,FOLLOW_20_in_ruleXFeatureCall10262); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXFeatureCallRule());
                      	        }
                             		setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt74=3;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4392:1: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4393:3: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXFeatureCall10347);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_8_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4410:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4410:6: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4410:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4410:7: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4411:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4411:1: (lv_featureCallArguments_9_0= ruleXExpression )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4412:3: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall10375);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"featureCallArguments",
                                      		lv_featureCallArguments_9_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4428:2: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop73:
                            do {
                                int alt73=2;
                                int LA73_0 = input.LA(1);

                                if ( (LA73_0==57) ) {
                                    alt73=1;
                                }


                                switch (alt73) {
                            	case 1 :
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4428:4: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,57,FOLLOW_57_in_ruleXFeatureCall10388); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	          
                            	    }
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4432:1: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4433:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4433:1: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4434:3: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXFeatureCall10409);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"featureCallArguments",
                            	              		lv_featureCallArguments_11_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop73;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleXFeatureCall10426); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4457:1: (lv_featureCallArguments_13_0= ruleXClosure )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4458:3: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXFeatureCall10461);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      	        }
                             		add(
                             			current, 
                             			"featureCallArguments",
                              		lv_featureCallArguments_13_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4482:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4483:2: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4484:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID10499);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFeatureCallID10510); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4491:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4494:28: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4495:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4495:1: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt77=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt77=1;
                }
                break;
            case 75:
                {
                alt77=2;
                }
                break;
            case 22:
                {
                alt77=3;
                }
                break;
            case 76:
                {
                alt77=4;
                }
                break;
            case 77:
                {
                alt77=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4496:5: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleValidID_in_ruleFeatureCallID10557);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ValidID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4508:2: kw= 'extends'
                    {
                    kw=(Token)match(input,75,FOLLOW_75_in_ruleFeatureCallID10581); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4515:2: kw= 'static'
                    {
                    kw=(Token)match(input,22,FOLLOW_22_in_ruleFeatureCallID10600); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4522:2: kw= 'import'
                    {
                    kw=(Token)match(input,76,FOLLOW_76_in_ruleFeatureCallID10619); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4529:2: kw= 'extension'
                    {
                    kw=(Token)match(input,77,FOLLOW_77_in_ruleFeatureCallID10638); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4542:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4543:2: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4544:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper10679);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIdOrSuper10690); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4551:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4554:28: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4555:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4555:1: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID||LA78_0==22||(LA78_0>=75 && LA78_0<=77)) ) {
                alt78=1;
            }
            else if ( (LA78_0==78) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4556:5: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper10737);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_FeatureCallID_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4568:2: kw= 'super'
                    {
                    kw=(Token)match(input,78,FOLLOW_78_in_ruleIdOrSuper10761); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4581:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4582:2: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4583:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall10801);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXConstructorCall10811); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4590:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4593:28: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4594:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4594:1: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4594:2: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4594:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4595:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,25,FOLLOW_25_in_ruleXConstructorCall10857); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4604:1: ( ( ruleQualifiedName ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4605:1: ( ruleQualifiedName )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4605:1: ( ruleQualifiedName )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4606:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXConstructorCallRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXConstructorCall10880);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:3: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:3: ( ( '<' )=>otherlv_3= '<' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:4: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,38,FOLLOW_38_in_ruleXConstructorCall10901); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4624:2: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4625:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4625:1: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4626:3: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10923);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArguments",
                              		lv_typeArguments_4_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4642:2: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop79:
                    do {
                        int alt79=2;
                        int LA79_0 = input.LA(1);

                        if ( (LA79_0==57) ) {
                            alt79=1;
                        }


                        switch (alt79) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4642:4: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,57,FOLLOW_57_in_ruleXConstructorCall10936); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4646:1: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4647:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4647:1: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4648:3: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10957);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArguments",
                    	              		lv_typeArguments_6_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop79;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,37,FOLLOW_37_in_ruleXConstructorCall10971); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                          
                    }

                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:3: ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:4: ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:4: ( ( '(' )=>otherlv_8= '(' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:5: ( '(' )=>otherlv_8= '('
                    {
                    otherlv_8=(Token)match(input,20,FOLLOW_20_in_ruleXConstructorCall10994); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt82=3;
                    alt82 = dfa82.predict(input);
                    switch (alt82) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4690:1: (lv_arguments_9_0= ruleXShortClosure )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4691:3: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXShortClosure_in_ruleXConstructorCall11067);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_9_0, 
                                      		"XShortClosure");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4708:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4708:6: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4708:7: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4708:7: ( (lv_arguments_10_0= ruleXExpression ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4709:1: (lv_arguments_10_0= ruleXExpression )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4709:1: (lv_arguments_10_0= ruleXExpression )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4710:3: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall11095);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"arguments",
                                      		lv_arguments_10_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4726:2: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==57) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4726:4: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,57,FOLLOW_57_in_ruleXConstructorCall11108); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	          
                            	    }
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4730:1: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4731:1: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4731:1: (lv_arguments_12_0= ruleXExpression )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4732:3: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleXExpression_in_ruleXConstructorCall11129);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"arguments",
                            	              		lv_arguments_12_0, 
                            	              		"XExpression");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,21,FOLLOW_21_in_ruleXConstructorCall11146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                          
                    }

                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4755:1: (lv_arguments_14_0= ruleXClosure )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4756:3: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXClosure_in_ruleXConstructorCall11181);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_14_0, 
                              		"XClosure");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4780:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4781:2: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4782:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral11218);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXBooleanLiteral11228); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4789:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4792:28: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4793:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4793:1: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4793:2: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4793:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4794:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4799:2: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==79) ) {
                alt85=1;
            }
            else if ( (LA85_0==80) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4799:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,79,FOLLOW_79_in_ruleXBooleanLiteral11275); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4804:6: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4804:6: ( (lv_isTrue_2_0= 'true' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4805:1: (lv_isTrue_2_0= 'true' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4805:1: (lv_isTrue_2_0= 'true' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4806:3: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,80,FOLLOW_80_in_ruleXBooleanLiteral11299); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "isTrue", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4827:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4828:2: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4829:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral11349);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNullLiteral11359); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4836:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4839:28: ( ( () otherlv_1= 'null' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4840:1: ( () otherlv_1= 'null' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4840:1: ( () otherlv_1= 'null' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4840:2: () otherlv_1= 'null'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4840:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4841:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,24,FOLLOW_24_in_ruleXNullLiteral11405); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4858:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4859:2: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4860:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral11441);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXNumberLiteral11451); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4867:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4870:28: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4871:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4871:1: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4871:2: () ( (lv_value_1_0= ruleNumber ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4871:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4872:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4877:2: ( (lv_value_1_0= ruleNumber ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4878:1: (lv_value_1_0= ruleNumber )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4878:1: (lv_value_1_0= ruleNumber )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4879:3: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNumber_in_ruleXNumberLiteral11506);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"Number");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4903:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4904:2: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4905:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral11542);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXStringLiteral11552); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4912:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4915:28: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4916:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4916:1: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4916:2: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4916:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4917:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
                          current);
                  
            }

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4922:2: ( (lv_value_1_0= RULE_STRING ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4923:1: (lv_value_1_0= RULE_STRING )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4923:1: (lv_value_1_0= RULE_STRING )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4924:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXStringLiteral11603); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getXStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4948:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4949:2: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4950:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral11644);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTypeLiteral11654); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4957:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4960:28: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4961:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4961:1: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4961:2: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4961:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4962:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_81_in_ruleXTypeLiteral11700); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,20,FOLLOW_20_in_ruleXTypeLiteral11712); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4975:1: ( ( ruleQualifiedName ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4976:1: ( ruleQualifiedName )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4976:1: ( ruleQualifiedName )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4977:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getXTypeLiteralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral11735);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4990:2: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==61) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4991:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4991:1: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4992:3: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral11756);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arrayDimensions",
            	              		lv_arrayDimensions_4_0, 
            	              		"ArrayBrackets");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FOLLOW_21_in_ruleXTypeLiteral11769); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5020:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5021:2: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5022:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression11805);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXThrowExpression11815); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5029:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5032:28: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5033:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5033:1: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5033:2: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5033:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5034:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,82,FOLLOW_82_in_ruleXThrowExpression11861); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5043:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5044:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5044:1: (lv_expression_2_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5045:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXThrowExpression11882);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5069:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5070:2: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5071:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression11918);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXReturnExpression11928); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5078:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5081:28: ( ( () otherlv_1= 'return' ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5082:1: ( () otherlv_1= 'return' ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5082:1: ( () otherlv_1= 'return' ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5082:2: () otherlv_1= 'return' ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5082:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5083:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_83_in_ruleXReturnExpression11974); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5092:1: ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5092:2: ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5097:1: (lv_expression_2_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5098:3: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXReturnExpression12005);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5122:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5123:2: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5124:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression12042);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression12052); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5131:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5134:28: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5135:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5135:1: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5135:2: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5135:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5136:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,84,FOLLOW_84_in_ruleXTryCatchFinallyExpression12098); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5145:1: ( (lv_expression_2_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5146:1: (lv_expression_2_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5146:1: (lv_expression_2_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5147:3: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12119);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:2: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==86) ) {
                alt90=1;
            }
            else if ( (LA90_0==85) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:3: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:4: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==86) ) {
                            int LA88_2 = input.LA(2);

                            if ( (synpred34_InternalMokaDSL()) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:5: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5165:1: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5166:3: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression12149);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"catchClauses",
                    	              		lv_catchClauses_3_0, 
                    	              		"XCatchClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:3: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==85) ) {
                        int LA89_1 = input.LA(2);

                        if ( (synpred35_InternalMokaDSL()) ) {
                            alt89=1;
                        }
                    }
                    switch (alt89) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:4: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:4: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:5: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,85,FOLLOW_85_in_ruleXTryCatchFinallyExpression12171); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                                  
                            }

                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5187:2: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5188:1: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5188:1: (lv_finallyExpression_5_0= ruleXExpression )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5189:3: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12193);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finallyExpression",
                                      		lv_finallyExpression_5_0, 
                                      		"XExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5206:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5206:6: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5206:8: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,85,FOLLOW_85_in_ruleXTryCatchFinallyExpression12215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5210:1: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5211:1: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5211:1: (lv_finallyExpression_7_0= ruleXExpression )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5212:3: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12236);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"finallyExpression",
                              		lv_finallyExpression_7_0, 
                              		"XExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5236:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5237:2: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5238:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause12274);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXCatchClause12284); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5245:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5248:28: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5249:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5249:1: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5249:2: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5249:2: ( ( 'catch' )=>otherlv_0= 'catch' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5249:3: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,86,FOLLOW_86_in_ruleXCatchClause12329); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
                  
            }

            }

            otherlv_1=(Token)match(input,20,FOLLOW_20_in_ruleXCatchClause12342); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5258:1: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5259:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5259:1: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5260:3: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause12363);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"declaredParam",
                      		lv_declaredParam_2_0, 
                      		"FullJvmFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,21,FOLLOW_21_in_ruleXCatchClause12375); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5280:1: ( (lv_expression_4_0= ruleXExpression ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5281:1: (lv_expression_4_0= ruleXExpression )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5281:1: (lv_expression_4_0= ruleXExpression )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5282:3: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleXExpression_in_ruleXCatchClause12396);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"XExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5306:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5307:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5308:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName12433);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName12444); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5315:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5318:28: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5319:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5319:1: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5320:5: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName12491);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ValidID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5330:1: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==54) ) {
                    int LA91_2 = input.LA(2);

                    if ( (LA91_2==RULE_ID) ) {
                        int LA91_3 = input.LA(3);

                        if ( (synpred37_InternalMokaDSL()) ) {
                            alt91=1;
                        }


                    }


                }


                switch (alt91) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5330:2: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5330:2: ( ( '.' )=>kw= '.' )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5330:3: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,54,FOLLOW_54_in_ruleQualifiedName12519); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	              newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_ruleValidID_in_ruleQualifiedName12542);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ValidID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5357:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


         
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        	
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5361:2: (iv_ruleNumber= ruleNumber EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5362:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber12596);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumber12607); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5372:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;

         enterRule(); 
        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5376:28: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5377:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5377:1: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_HEX) ) {
                alt95=1;
            }
            else if ( (LA95_0==RULE_INT||LA95_0==RULE_DECIMAL) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5377:6: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_RULE_HEX_in_ruleNumber12651); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5385:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5385:6: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5385:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5385:7: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==RULE_INT) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==RULE_DECIMAL) ) {
                        alt92=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }
                    switch (alt92) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5385:12: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber12679); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_INT_1);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
                                  
                            }

                            }
                            break;
                        case 2 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5393:10: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber12705); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		current.merge(this_DECIMAL_2);
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                                  newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
                                  
                            }

                            }
                            break;

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5400:2: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==54) ) {
                        int LA94_1 = input.LA(2);

                        if ( (LA94_1==RULE_INT||LA94_1==RULE_DECIMAL) ) {
                            alt94=1;
                        }
                    }
                    switch (alt94) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5401:2: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,54,FOLLOW_54_in_ruleNumber12725); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
                                  
                            }
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5406:1: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt93=2;
                            int LA93_0 = input.LA(1);

                            if ( (LA93_0==RULE_INT) ) {
                                alt93=1;
                            }
                            else if ( (LA93_0==RULE_DECIMAL) ) {
                                alt93=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 93, 0, input);

                                throw nvae;
                            }
                            switch (alt93) {
                                case 1 :
                                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5406:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber12741); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_INT_4);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5414:10: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_RULE_DECIMAL_in_ruleNumber12767); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		current.merge(this_DECIMAL_5);
                                          
                                    }
                                    if ( state.backtracking==0 ) {
                                       
                                          newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5434:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5435:2: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5436:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference12822);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmTypeReference12832); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5443:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5446:28: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5447:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5447:1: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_ID) ) {
                alt97=1;
            }
            else if ( (LA97_0==20||LA97_0==42) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5447:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5447:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5448:5: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference12880);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmParameterizedTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:1: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==61) ) {
                            int LA96_2 = input.LA(2);

                            if ( (LA96_2==62) ) {
                                int LA96_3 = input.LA(3);

                                if ( (synpred38_InternalMokaDSL()) ) {
                                    alt96=1;
                                }


                            }


                        }


                        switch (alt96) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:2: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5457:24: ( () ruleArrayBrackets )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5457:25: () ruleArrayBrackets
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5457:25: ()
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5458:5: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference12916);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5473:5: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference12947);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XFunctionTypeRef_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5489:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5490:2: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5491:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets12983);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleArrayBrackets12994); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5498:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5501:28: ( (kw= '[' kw= ']' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5502:1: (kw= '[' kw= ']' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5502:1: (kw= '[' kw= ']' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5503:2: kw= '[' kw= ']'
            {
            kw=(Token)match(input,61,FOLLOW_61_in_ruleArrayBrackets13032); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
                  
            }
            kw=(Token)match(input,62,FOLLOW_62_in_ruleArrayBrackets13045); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5522:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5523:2: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5524:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef13085);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXFunctionTypeRef13095); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5531:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5534:28: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5535:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5535:1: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5535:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5535:2: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==20) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5535:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_20_in_ruleXFunctionTypeRef13133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                          
                    }
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5539:1: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==RULE_ID||LA99_0==20||LA99_0==42) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5539:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5539:2: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5540:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5540:1: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5541:3: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13155);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"paramTypes",
                                      		lv_paramTypes_1_0, 
                                      		"JvmTypeReference");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5557:2: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop98:
                            do {
                                int alt98=2;
                                int LA98_0 = input.LA(1);

                                if ( (LA98_0==57) ) {
                                    alt98=1;
                                }


                                switch (alt98) {
                            	case 1 :
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5557:4: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,57,FOLLOW_57_in_ruleXFunctionTypeRef13168); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	          
                            	    }
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5561:1: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5562:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5562:1: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5563:3: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13189);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"paramTypes",
                            	              		lv_paramTypes_3_0, 
                            	              		"JvmTypeReference");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop98;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleXFunctionTypeRef13205); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                          
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FOLLOW_42_in_ruleXFunctionTypeRef13219); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5587:1: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5588:1: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5588:1: (lv_returnType_6_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5589:3: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13240);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"returnType",
                      		lv_returnType_6_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5613:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5614:2: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5615:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference13276);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference13286); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5622:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5625:28: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5626:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5626:1: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5626:2: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5626:2: ( ( ruleQualifiedName ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5627:1: ( ruleQualifiedName )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5627:1: ( ruleQualifiedName )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5628:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference13334);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:3: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:3: ( ( '<' )=>otherlv_1= '<' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:4: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_38_in_ruleJvmParameterizedTypeReference13355); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5646:2: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5647:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5647:1: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5648:3: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13377);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_2_0, 
                              		"JvmArgumentTypeReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5664:2: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop101:
                    do {
                        int alt101=2;
                        int LA101_0 = input.LA(1);

                        if ( (LA101_0==57) ) {
                            alt101=1;
                        }


                        switch (alt101) {
                    	case 1 :
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5664:4: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,57,FOLLOW_57_in_ruleJvmParameterizedTypeReference13390); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5668:1: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5669:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5669:1: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5670:3: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13411);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_4_0, 
                    	              		"JvmArgumentTypeReference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop101;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,37,FOLLOW_37_in_ruleJvmParameterizedTypeReference13425); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5698:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5699:2: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5700:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference13463);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference13473); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5707:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5710:28: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5711:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5711:1: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==RULE_ID||LA103_0==20||LA103_0==42) ) {
                alt103=1;
            }
            else if ( (LA103_0==87) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5712:5: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference13520);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmTypeReference_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5722:5: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference13547);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_JvmWildcardTypeReference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5738:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5739:2: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5740:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference13582);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference13592); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5747:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5750:28: ( ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5751:1: ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5751:1: ( () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5751:2: () otherlv_1= '?' ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )?
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5751:2: ()
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5752:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_87_in_ruleJvmWildcardTypeReference13638); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5761:1: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) | ( (lv_constraints_3_0= ruleJvmLowerBound ) ) )?
            int alt104=3;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==75) ) {
                alt104=1;
            }
            else if ( (LA104_0==78) ) {
                alt104=2;
            }
            switch (alt104) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5761:2: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5761:2: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5762:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5762:1: (lv_constraints_2_0= ruleJvmUpperBound )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5763:3: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference13660);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_2_0, 
                              		"JvmUpperBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5780:6: ( (lv_constraints_3_0= ruleJvmLowerBound ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5780:6: ( (lv_constraints_3_0= ruleJvmLowerBound ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5781:1: (lv_constraints_3_0= ruleJvmLowerBound )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5781:1: (lv_constraints_3_0= ruleJvmLowerBound )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5782:3: lv_constraints_3_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference13687);
                    lv_constraints_3_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      	        }
                             		add(
                             			current, 
                             			"constraints",
                              		lv_constraints_3_0, 
                              		"JvmLowerBound");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5806:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5807:2: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5808:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound13725);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBound13735); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5815:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5818:28: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5819:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5819:1: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5819:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,75,FOLLOW_75_in_ruleJvmUpperBound13772); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5823:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5824:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5824:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5825:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound13793);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5849:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5850:2: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5851:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded13829);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded13839); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5858:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5861:28: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5862:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5862:1: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5862:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,88,FOLLOW_88_in_ruleJvmUpperBoundAnded13876); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5866:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5867:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5867:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5868:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded13897);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5892:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5893:2: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5894:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound13933);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleJvmLowerBound13943); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5901:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5904:28: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5905:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5905:1: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5905:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,78,FOLLOW_78_in_ruleJvmLowerBound13980); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5909:1: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5910:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5910:1: (lv_typeReference_1_0= ruleJvmTypeReference )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5911:3: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound14001);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              	        }
                     		set(
                     			current, 
                     			"typeReference",
                      		lv_typeReference_1_0, 
                      		"JvmTypeReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5937:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5938:2: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5939:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard14040);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard14051); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5946:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5949:28: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5950:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5950:1: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5951:5: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard14098);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_QualifiedName_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                      afterParserOrEnumRuleCall();
                  
            }
            kw=(Token)match(input,54,FOLLOW_54_in_ruleQualifiedNameWithWildcard14116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
                  
            }
            kw=(Token)match(input,48,FOLLOW_48_in_ruleQualifiedNameWithWildcard14129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5981:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5982:2: (iv_ruleValidID= ruleValidID EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5983:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_ruleValidID_in_entryRuleValidID14170);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValidID14181); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5990:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5993:28: (this_ID_0= RULE_ID )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5994:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleValidID14220); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6009:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6010:2: (iv_ruleXImportSection= ruleXImportSection EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6011:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_ruleXImportSection_in_entryRuleXImportSection14264);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXImportSection14274); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6018:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6021:28: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6022:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6022:1: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt105=0;
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==76) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6023:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6023:1: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6024:3: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleXImportDeclaration_in_ruleXImportSection14319);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"importDeclarations",
            	              		lv_importDeclarations_0_0, 
            	              		"XImportDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt105 >= 1 ) break loop105;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(105, input);
                        throw eee;
                }
                cnt105++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6048:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6049:2: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6050:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration14355);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXImportDeclaration14365); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6057:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;


         enterRule(); 
            
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6060:28: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6061:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6061:1: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6061:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,76,FOLLOW_76_in_ruleXImportDeclaration14402); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
                  
            }
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6065:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt107=3;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6065:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6065:2: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6065:3: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*'
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6065:3: ( (lv_static_1_0= 'static' ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6066:1: (lv_static_1_0= 'static' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6066:1: (lv_static_1_0= 'static' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6067:3: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,22,FOLLOW_22_in_ruleXImportDeclaration14422); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6080:2: ( (lv_extension_2_0= 'extension' ) )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==77) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6081:1: (lv_extension_2_0= 'extension' )
                            {
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6081:1: (lv_extension_2_0= 'extension' )
                            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6082:3: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,77,FOLLOW_77_in_ruleXImportDeclaration14453); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "extension", true, "extension");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6095:3: ( ( ruleQualifiedName ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6096:1: ( ruleQualifiedName )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6096:1: ( ruleQualifiedName )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6097:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14490);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,54,FOLLOW_54_in_ruleXImportDeclaration14502); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3());
                          
                    }
                    otherlv_5=(Token)match(input,48,FOLLOW_48_in_ruleXImportDeclaration14514); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6119:6: ( ( ruleQualifiedName ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6119:6: ( ( ruleQualifiedName ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6120:1: ( ruleQualifiedName )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6120:1: ( ruleQualifiedName )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6121:3: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14544);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6135:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6135:6: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6136:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6136:1: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6137:3: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration14571);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"importedNamespace",
                              		lv_importedNamespace_7_0, 
                              		"QualifiedNameWithWildcard");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6153:3: (otherlv_8= ';' )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==15) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6153:5: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,15,FOLLOW_15_in_ruleXImportDeclaration14585); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "ruleVisibility"
    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6165:1: ruleVisibility returns [Enumerator current=null] : ( (enumLiteral_0= 'private' ) | (enumLiteral_1= 'protected' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6167:28: ( ( (enumLiteral_0= 'private' ) | (enumLiteral_1= 'protected' ) ) )
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6168:1: ( (enumLiteral_0= 'private' ) | (enumLiteral_1= 'protected' ) )
            {
            // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6168:1: ( (enumLiteral_0= 'private' ) | (enumLiteral_1= 'protected' ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==89) ) {
                alt109=1;
            }
            else if ( (LA109_0==90) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6168:2: (enumLiteral_0= 'private' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6168:2: (enumLiteral_0= 'private' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6168:4: enumLiteral_0= 'private'
                    {
                    enumLiteral_0=(Token)match(input,89,FOLLOW_89_in_ruleVisibility14637); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6174:6: (enumLiteral_1= 'protected' )
                    {
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6174:6: (enumLiteral_1= 'protected' )
                    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:6174:8: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,90,FOLLOW_90_in_ruleVisibility14654); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibility"

    // $ANTLR start synpred1_InternalMokaDSL
    public final void synpred1_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:3: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:4: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:4: ( () ( ( ruleOpMultiAssign ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:5: () ( ( ruleOpMultiAssign ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:987:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:988:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:988:2: ( ( ruleOpMultiAssign ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:989:1: ( ruleOpMultiAssign )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:989:1: ( ruleOpMultiAssign )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:990:3: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_ruleOpMultiAssign_in_synpred1_InternalMokaDSL2241);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalMokaDSL

    // $ANTLR start synpred2_InternalMokaDSL
    public final void synpred2_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:3: ( ( () ( ( ruleOpOr ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:4: ( () ( ( ruleOpOr ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:4: ( () ( ( ruleOpOr ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:5: () ( ( ruleOpOr ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1122:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1123:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1123:2: ( ( ruleOpOr ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1124:1: ( ruleOpOr )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1124:1: ( ruleOpOr )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1125:3: ruleOpOr
        {
        pushFollow(FOLLOW_ruleOpOr_in_synpred2_InternalMokaDSL2610);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalMokaDSL

    // $ANTLR start synpred3_InternalMokaDSL
    public final void synpred3_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:4: ( () ( ( ruleOpAnd ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:4: ( () ( ( ruleOpAnd ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:5: () ( ( ruleOpAnd ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1223:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1224:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1224:2: ( ( ruleOpAnd ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1225:1: ( ruleOpAnd )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1225:1: ( ruleOpAnd )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1226:3: ruleOpAnd
        {
        pushFollow(FOLLOW_ruleOpAnd_in_synpred3_InternalMokaDSL2869);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalMokaDSL

    // $ANTLR start synpred4_InternalMokaDSL
    public final void synpred4_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:4: ( () ( ( ruleOpEquality ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:4: ( () ( ( ruleOpEquality ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:5: () ( ( ruleOpEquality ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1324:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1325:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1325:2: ( ( ruleOpEquality ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1326:1: ( ruleOpEquality )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1326:1: ( ruleOpEquality )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1327:3: ruleOpEquality
        {
        pushFollow(FOLLOW_ruleOpEquality_in_synpred4_InternalMokaDSL3128);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalMokaDSL

    // $ANTLR start synpred5_InternalMokaDSL
    public final void synpred5_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:4: ( ( () 'instanceof' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:5: ( () 'instanceof' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:5: ( () 'instanceof' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:6: () 'instanceof'
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1446:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1447:1: 
        {
        }

        match(input,34,FOLLOW_34_in_synpred5_InternalMokaDSL3442); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalMokaDSL

    // $ANTLR start synpred6_InternalMokaDSL
    public final void synpred6_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:8: ( ( () ( ( ruleOpCompare ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:9: ( () ( ( ruleOpCompare ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:9: ( () ( ( ruleOpCompare ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:10: () ( ( ruleOpCompare ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1477:10: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1478:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1478:2: ( ( ruleOpCompare ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1479:1: ( ruleOpCompare )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1479:1: ( ruleOpCompare )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1480:3: ruleOpCompare
        {
        pushFollow(FOLLOW_ruleOpCompare_in_synpred6_InternalMokaDSL3513);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalMokaDSL

    // $ANTLR start synpred7_InternalMokaDSL
    public final void synpred7_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:3: ( ( () ( ( ruleOpOther ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:4: ( () ( ( ruleOpOther ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:4: ( () ( ( ruleOpOther ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:5: () ( ( ruleOpOther ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1599:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1600:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1600:2: ( ( ruleOpOther ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1601:1: ( ruleOpOther )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1601:1: ( ruleOpOther )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1602:3: ruleOpOther
        {
        pushFollow(FOLLOW_ruleOpOther_in_synpred7_InternalMokaDSL3832);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalMokaDSL

    // $ANTLR start synpred8_InternalMokaDSL
    public final void synpred8_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:3: ( ( '>' '>' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:4: ( '>' '>' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1711:4: ( '>' '>' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1712:2: '>' '>'
        {
        match(input,37,FOLLOW_37_in_synpred8_InternalMokaDSL4101); if (state.failed) return ;
        match(input,37,FOLLOW_37_in_synpred8_InternalMokaDSL4106); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalMokaDSL

    // $ANTLR start synpred9_InternalMokaDSL
    public final void synpred9_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:3: ( ( '<' '<' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:4: ( '<' '<' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1741:4: ( '<' '<' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1742:2: '<' '<'
        {
        match(input,38,FOLLOW_38_in_synpred9_InternalMokaDSL4188); if (state.failed) return ;
        match(input,38,FOLLOW_38_in_synpred9_InternalMokaDSL4193); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalMokaDSL

    // $ANTLR start synpred10_InternalMokaDSL
    public final void synpred10_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:4: ( () ( ( ruleOpAdd ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:4: ( () ( ( ruleOpAdd ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:5: () ( ( ruleOpAdd ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1815:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1816:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1816:2: ( ( ruleOpAdd ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1817:1: ( ruleOpAdd )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1817:1: ( ruleOpAdd )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1818:3: ruleOpAdd
        {
        pushFollow(FOLLOW_ruleOpAdd_in_synpred10_InternalMokaDSL4415);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMokaDSL

    // $ANTLR start synpred11_InternalMokaDSL
    public final void synpred11_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:4: ( () ( ( ruleOpMulti ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:4: ( () ( ( ruleOpMulti ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:5: () ( ( ruleOpMulti ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1923:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1924:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1924:2: ( ( ruleOpMulti ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1925:1: ( ruleOpMulti )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1925:1: ( ruleOpMulti )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:1926:3: ruleOpMulti
        {
        pushFollow(FOLLOW_ruleOpMulti_in_synpred11_InternalMokaDSL4695);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalMokaDSL

    // $ANTLR start synpred12_InternalMokaDSL
    public final void synpred12_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:3: ( ( () 'as' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:4: ( () 'as' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:4: ( () 'as' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:5: () 'as'
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2156:5: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2157:1: 
        {
        }

        match(input,53,FOLLOW_53_in_synpred12_InternalMokaDSL5289); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalMokaDSL

    // $ANTLR start synpred13_InternalMokaDSL
    public final void synpred13_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:4: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:5: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:6: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2216:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2217:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2217:2: ( '.' | ( ( '::' ) ) )
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( (LA110_0==54) ) {
            alt110=1;
        }
        else if ( (LA110_0==55) ) {
            alt110=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 110, 0, input);

            throw nvae;
        }
        switch (alt110) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2217:4: '.'
                {
                match(input,54,FOLLOW_54_in_synpred13_InternalMokaDSL5444); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2219:6: ( ( '::' ) )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2219:6: ( ( '::' ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2220:1: ( '::' )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2220:1: ( '::' )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2221:2: '::'
                {
                match(input,55,FOLLOW_55_in_synpred13_InternalMokaDSL5458); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2225:3: ( ( ruleFeatureCallID ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2226:1: ( ruleFeatureCallID )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2226:1: ( ruleFeatureCallID )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2227:3: ruleFeatureCallID
        {
        pushFollow(FOLLOW_ruleFeatureCallID_in_synpred13_InternalMokaDSL5474);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_ruleOpSingleAssign_in_synpred13_InternalMokaDSL5480);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalMokaDSL

    // $ANTLR start synpred14_InternalMokaDSL
    public final void synpred14_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:8: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:9: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:10: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2297:10: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2298:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2298:2: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt111=3;
        switch ( input.LA(1) ) {
        case 54:
            {
            alt111=1;
            }
            break;
        case 56:
            {
            alt111=2;
            }
            break;
        case 55:
            {
            alt111=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 111, 0, input);

            throw nvae;
        }

        switch (alt111) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2298:4: '.'
                {
                match(input,54,FOLLOW_54_in_synpred14_InternalMokaDSL5622); if (state.failed) return ;

                }
                break;
            case 2 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2300:6: ( ( '?.' ) )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2300:6: ( ( '?.' ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2301:1: ( '?.' )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2301:1: ( '?.' )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2302:2: '?.'
                {
                match(input,56,FOLLOW_56_in_synpred14_InternalMokaDSL5636); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2307:6: ( ( '::' ) )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2307:6: ( ( '::' ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2308:1: ( '::' )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2308:1: ( '::' )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2309:2: '::'
                {
                match(input,55,FOLLOW_55_in_synpred14_InternalMokaDSL5656); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred14_InternalMokaDSL

    // $ANTLR start synpred15_InternalMokaDSL
    public final void synpred15_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2418:4: ( ( '(' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2419:1: ( '(' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2419:1: ( '(' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2420:2: '('
        {
        match(input,20,FOLLOW_20_in_synpred15_InternalMokaDSL5883); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalMokaDSL

    // $ANTLR start synpred16_InternalMokaDSL
    public final void synpred16_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2439:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2440:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2440:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( (LA113_0==RULE_ID||LA113_0==20||LA113_0==42) ) {
            alt113=1;
        }
        switch (alt113) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2440:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2440:3: ( ( ruleJvmFormalParameter ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2441:1: ( ruleJvmFormalParameter )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2441:1: ( ruleJvmFormalParameter )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2442:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred16_InternalMokaDSL5935);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2444:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop112:
                do {
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==57) ) {
                        alt112=1;
                    }


                    switch (alt112) {
                	case 1 :
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2444:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,57,FOLLOW_57_in_synpred16_InternalMokaDSL5942); if (state.failed) return ;
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2445:1: ( ( ruleJvmFormalParameter ) )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2446:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2446:1: ( ruleJvmFormalParameter )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2447:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred16_InternalMokaDSL5949);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop112;
                    }
                } while (true);


                }
                break;

        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2449:6: ( ( '|' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2450:1: ( '|' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2450:1: ( '|' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2451:2: '|'
        {
        match(input,63,FOLLOW_63_in_synpred16_InternalMokaDSL5963); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred16_InternalMokaDSL

    // $ANTLR start synpred17_InternalMokaDSL
    public final void synpred17_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:4: ( ( () '[' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:5: ( () '[' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:5: ( () '[' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:6: () '['
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2518:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2519:1: 
        {
        }

        match(input,61,FOLLOW_61_in_synpred17_InternalMokaDSL6083); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalMokaDSL

    // $ANTLR start synpred18_InternalMokaDSL
    public final void synpred18_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:7: ( ( () '[' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:8: ( () '[' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:8: ( () '[' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:9: () '['
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2719:9: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:2720:1: 
        {
        }

        match(input,61,FOLLOW_61_in_synpred18_InternalMokaDSL6634); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalMokaDSL

    // $ANTLR start synpred20_InternalMokaDSL
    public final void synpred20_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:6: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( (LA115_0==RULE_ID||LA115_0==20||LA115_0==42) ) {
            alt115=1;
        }
        switch (alt115) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:7: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3011:7: ( ( ruleJvmFormalParameter ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3012:1: ( ruleJvmFormalParameter )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3012:1: ( ruleJvmFormalParameter )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3013:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalMokaDSL7384);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3015:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop114:
                do {
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==57) ) {
                        alt114=1;
                    }


                    switch (alt114) {
                	case 1 :
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3015:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,57,FOLLOW_57_in_synpred20_InternalMokaDSL7391); if (state.failed) return ;
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3016:1: ( ( ruleJvmFormalParameter ) )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3017:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3017:1: ( ruleJvmFormalParameter )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3018:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalMokaDSL7398);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop114;
                    }
                } while (true);


                }
                break;

        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3020:6: ( ( '|' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3021:1: ( '|' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3021:1: ( '|' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3022:2: '|'
        {
        match(input,63,FOLLOW_63_in_synpred20_InternalMokaDSL7412); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred20_InternalMokaDSL

    // $ANTLR start synpred22_InternalMokaDSL
    public final void synpred22_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:4: ( 'else' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3381:6: 'else'
        {
        match(input,65,FOLLOW_65_in_synpred22_InternalMokaDSL8195); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred22_InternalMokaDSL

    // $ANTLR start synpred23_InternalMokaDSL
    public final void synpred23_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:4: ( ( ( ( ruleValidID ) ) ':' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:5: ( ( ( ruleValidID ) ) ':' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:5: ( ( ( ruleValidID ) ) ':' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:6: ( ( ruleValidID ) ) ':'
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3435:6: ( ( ruleValidID ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3436:1: ( ruleValidID )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3436:1: ( ruleValidID )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3437:1: ruleValidID
        {
        pushFollow(FOLLOW_ruleValidID_in_synpred23_InternalMokaDSL8337);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,67,FOLLOW_67_in_synpred23_InternalMokaDSL8343); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalMokaDSL

    // $ANTLR start synpred24_InternalMokaDSL
    public final void synpred24_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:8: ( ( '(' ( ( ruleValidID ) ) ':' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:9: ( '(' ( ( ruleValidID ) ) ':' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:9: ( '(' ( ( ruleValidID ) ) ':' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3481:11: '(' ( ( ruleValidID ) ) ':'
        {
        match(input,20,FOLLOW_20_in_synpred24_InternalMokaDSL8419); if (state.failed) return ;
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3482:1: ( ( ruleValidID ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3483:1: ( ruleValidID )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3483:1: ( ruleValidID )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:3484:1: ruleValidID
        {
        pushFollow(FOLLOW_ruleValidID_in_synpred24_InternalMokaDSL8426);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,67,FOLLOW_67_in_synpred24_InternalMokaDSL8432); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalMokaDSL

    // $ANTLR start synpred25_InternalMokaDSL
    public final void synpred25_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:4: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:5: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4065:6: ( ( ruleJvmTypeReference ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4066:1: ( ruleJvmTypeReference )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4066:1: ( ruleJvmTypeReference )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4067:1: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_ruleJvmTypeReference_in_synpred25_InternalMokaDSL9697);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4069:2: ( ( ruleValidID ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4070:1: ( ruleValidID )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4070:1: ( ruleValidID )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4071:1: ruleValidID
        {
        pushFollow(FOLLOW_ruleValidID_in_synpred25_InternalMokaDSL9706);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_InternalMokaDSL

    // $ANTLR start synpred26_InternalMokaDSL
    public final void synpred26_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4354:4: ( ( '(' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4355:1: ( '(' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4355:1: ( '(' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4356:2: '('
        {
        match(input,20,FOLLOW_20_in_synpred26_InternalMokaDSL10244); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalMokaDSL

    // $ANTLR start synpred27_InternalMokaDSL
    public final void synpred27_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4375:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4376:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4376:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt119=2;
        int LA119_0 = input.LA(1);

        if ( (LA119_0==RULE_ID||LA119_0==20||LA119_0==42) ) {
            alt119=1;
        }
        switch (alt119) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4376:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4376:3: ( ( ruleJvmFormalParameter ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4377:1: ( ruleJvmFormalParameter )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4377:1: ( ruleJvmFormalParameter )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4378:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalMokaDSL10296);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4380:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop118:
                do {
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==57) ) {
                        alt118=1;
                    }


                    switch (alt118) {
                	case 1 :
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4380:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,57,FOLLOW_57_in_synpred27_InternalMokaDSL10303); if (state.failed) return ;
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4381:1: ( ( ruleJvmFormalParameter ) )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4382:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4382:1: ( ruleJvmFormalParameter )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4383:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalMokaDSL10310);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop118;
                    }
                } while (true);


                }
                break;

        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4385:6: ( ( '|' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4386:1: ( '|' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4386:1: ( '|' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4387:2: '|'
        {
        match(input,63,FOLLOW_63_in_synpred27_InternalMokaDSL10324); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalMokaDSL

    // $ANTLR start synpred28_InternalMokaDSL
    public final void synpred28_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:4: ( ( () '[' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:5: ( () '[' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:5: ( () '[' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:6: () '['
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4454:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4455:1: 
        {
        }

        match(input,61,FOLLOW_61_in_synpred28_InternalMokaDSL10444); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred28_InternalMokaDSL

    // $ANTLR start synpred29_InternalMokaDSL
    public final void synpred29_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:4: ( '<' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4619:6: '<'
        {
        match(input,38,FOLLOW_38_in_synpred29_InternalMokaDSL10893); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_InternalMokaDSL

    // $ANTLR start synpred30_InternalMokaDSL
    public final void synpred30_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:5: ( '(' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4668:7: '('
        {
        match(input,20,FOLLOW_20_in_synpred30_InternalMokaDSL10986); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred30_InternalMokaDSL

    // $ANTLR start synpred31_InternalMokaDSL
    public final void synpred31_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:5: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:6: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4673:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4674:1: 
        {
        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4674:2: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt121=2;
        int LA121_0 = input.LA(1);

        if ( (LA121_0==RULE_ID||LA121_0==20||LA121_0==42) ) {
            alt121=1;
        }
        switch (alt121) {
            case 1 :
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4674:3: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4674:3: ( ( ruleJvmFormalParameter ) )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4675:1: ( ruleJvmFormalParameter )
                {
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4675:1: ( ruleJvmFormalParameter )
                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4676:1: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalMokaDSL11016);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4678:2: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop120:
                do {
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==57) ) {
                        alt120=1;
                    }


                    switch (alt120) {
                	case 1 :
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4678:4: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,57,FOLLOW_57_in_synpred31_InternalMokaDSL11023); if (state.failed) return ;
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4679:1: ( ( ruleJvmFormalParameter ) )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4680:1: ( ruleJvmFormalParameter )
                	    {
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4680:1: ( ruleJvmFormalParameter )
                	    // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4681:1: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalMokaDSL11030);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop120;
                    }
                } while (true);


                }
                break;

        }

        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4683:6: ( ( '|' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4684:1: ( '|' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4684:1: ( '|' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4685:2: '|'
        {
        match(input,63,FOLLOW_63_in_synpred31_InternalMokaDSL11044); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalMokaDSL

    // $ANTLR start synpred32_InternalMokaDSL
    public final void synpred32_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:4: ( ( () '[' ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:5: ( () '[' )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:5: ( () '[' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:6: () '['
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4752:6: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:4753:1: 
        {
        }

        match(input,61,FOLLOW_61_in_synpred32_InternalMokaDSL11164); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalMokaDSL

    // $ANTLR start synpred33_InternalMokaDSL
    public final void synpred33_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5092:2: ( ( ruleXExpression ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5093:1: ( ruleXExpression )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5093:1: ( ruleXExpression )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5094:1: ruleXExpression
        {
        pushFollow(FOLLOW_ruleXExpression_in_synpred33_InternalMokaDSL11988);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalMokaDSL

    // $ANTLR start synpred34_InternalMokaDSL
    public final void synpred34_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:5: ( 'catch' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5163:7: 'catch'
        {
        match(input,86,FOLLOW_86_in_synpred34_InternalMokaDSL12133); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalMokaDSL

    // $ANTLR start synpred35_InternalMokaDSL
    public final void synpred35_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:5: ( 'finally' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5182:7: 'finally'
        {
        match(input,85,FOLLOW_85_in_synpred35_InternalMokaDSL12163); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalMokaDSL

    // $ANTLR start synpred37_InternalMokaDSL
    public final void synpred37_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5330:3: ( '.' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5331:2: '.'
        {
        match(input,54,FOLLOW_54_in_synpred37_InternalMokaDSL12510); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred37_InternalMokaDSL

    // $ANTLR start synpred38_InternalMokaDSL
    public final void synpred38_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:2: ( ( () ruleArrayBrackets ) )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:3: ( () ruleArrayBrackets )
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:3: ( () ruleArrayBrackets )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:4: () ruleArrayBrackets
        {
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5456:4: ()
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5457:1: 
        {
        }

        pushFollow(FOLLOW_ruleArrayBrackets_in_synpred38_InternalMokaDSL12895);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_InternalMokaDSL

    // $ANTLR start synpred39_InternalMokaDSL
    public final void synpred39_InternalMokaDSL_fragment() throws RecognitionException {   
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:4: ( '<' )
        // ../com.factmint.moka.eclipse.xtext/src-gen/com/factmint/moka/eclipse/xtext/parser/antlr/internal/InternalMokaDSL.g:5641:6: '<'
        {
        match(input,38,FOLLOW_38_in_synpred39_InternalMokaDSL13347); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalMokaDSL

    // Delegated rules

    public final boolean synpred37_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalMokaDSL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalMokaDSL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA10 dfa10 = new DFA10(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA107 dfa107 = new DFA107(this);
    static final String DFA10_eotS =
        "\21\uffff";
    static final String DFA10_eofS =
        "\1\1\20\uffff";
    static final String DFA10_minS =
        "\1\4\4\uffff\7\0\5\uffff";
    static final String DFA10_maxS =
        "\1\132\4\uffff\7\0\5\uffff";
    static final String DFA10_acceptS =
        "\1\uffff\1\4\14\uffff\1\3\1\1\1\2";
    static final String DFA10_specialS =
        "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\5\uffff}>";
    static final String[] DFA10_transitionS = {
            "\1\11\3\uffff\2\1\4\uffff\1\1\1\uffff\2\1\2\uffff\1\12\1\uffff"+
            "\1\7\1\10\22\uffff\1\13\56\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
    static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
    static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
    static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
    static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
    static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
    static final short[][] DFA10_transition;

    static {
        int numStates = DFA10_transitionS.length;
        DFA10_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
        }
    }

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "()+ loopback of 507:3: ( ({...}? => ( ({...}? => ( (lv_static_1_0= 'static' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_final_2_0= 'final' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_visibility_3_0= ruleVisibility ) )? ( (lv_returnType_4_0= ruleJvmTypeReference ) )? ( (lv_name_5_0= RULE_ID ) ) otherlv_6= '(' ( (lv_constructorArgs_7_0= ruleMethodVariable ) )* otherlv_8= ')' ( (lv_body_9_0= ruleXBlockExpression ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_5 = input.LA(1);

                         
                        int index10_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {s = 14;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_6 = input.LA(1);

                         
                        int index10_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {s = 14;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_7 = input.LA(1);

                         
                        int index10_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA10_8 = input.LA(1);

                         
                        int index10_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 1) ) {s = 16;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA10_9 = input.LA(1);

                         
                        int index10_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {s = 14;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA10_10 = input.LA(1);

                         
                        int index10_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {s = 14;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA10_11 = input.LA(1);

                         
                        int index10_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getMethodAccess().getUnorderedGroup(), 2) ) {s = 14;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getMethodAccess().getUnorderedGroup()) ) {s = 1;}

                         
                        input.seek(index10_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA23_eotS =
        "\14\uffff";
    static final String DFA23_eofS =
        "\1\1\13\uffff";
    static final String DFA23_minS =
        "\1\4\1\uffff\11\0\1\uffff";
    static final String DFA23_maxS =
        "\1\126\1\uffff\11\0\1\uffff";
    static final String DFA23_acceptS =
        "\1\uffff\1\2\11\uffff\1\1";
    static final String DFA23_specialS =
        "\2\uffff\1\5\1\3\1\2\1\4\1\1\1\0\1\10\1\6\1\7\1\uffff}>";
    static final String[] DFA23_transitionS = {
            "\3\1\3\uffff\2\1\3\uffff\1\1\4\uffff\3\1\1\uffff\15\1\1\2\1"+
            "\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\21\1\1\uffff\27\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA23_eot = DFA.unpackEncodedString(DFA23_eotS);
    static final short[] DFA23_eof = DFA.unpackEncodedString(DFA23_eofS);
    static final char[] DFA23_min = DFA.unpackEncodedStringToUnsignedChars(DFA23_minS);
    static final char[] DFA23_max = DFA.unpackEncodedStringToUnsignedChars(DFA23_maxS);
    static final short[] DFA23_accept = DFA.unpackEncodedString(DFA23_acceptS);
    static final short[] DFA23_special = DFA.unpackEncodedString(DFA23_specialS);
    static final short[][] DFA23_transition;

    static {
        int numStates = DFA23_transitionS.length;
        DFA23_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA23_transition[i] = DFA.unpackEncodedString(DFA23_transitionS[i]);
        }
    }

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = DFA23_eot;
            this.eof = DFA23_eof;
            this.min = DFA23_min;
            this.max = DFA23_max;
            this.accept = DFA23_accept;
            this.special = DFA23_special;
            this.transition = DFA23_transition;
        }
        public String getDescription() {
            return "()* loopback of 1599:1: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_7 = input.LA(1);

                         
                        int index23_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_6 = input.LA(1);

                         
                        int index23_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA23_4 = input.LA(1);

                         
                        int index23_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA23_3 = input.LA(1);

                         
                        int index23_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA23_5 = input.LA(1);

                         
                        int index23_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA23_2 = input.LA(1);

                         
                        int index23_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_2);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA23_9 = input.LA(1);

                         
                        int index23_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA23_10 = input.LA(1);

                         
                        int index23_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA23_8 = input.LA(1);

                         
                        int index23_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMokaDSL()) ) {s = 11;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index23_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA26_eotS =
        "\14\uffff";
    static final String DFA26_eofS =
        "\14\uffff";
    static final String DFA26_minS =
        "\1\45\2\uffff\1\45\10\uffff";
    static final String DFA26_maxS =
        "\1\55\2\uffff\1\51\10\uffff";
    static final String DFA26_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\12\1\6\1\3";
    static final String DFA26_specialS =
        "\14\uffff}>";
    static final String[] DFA26_transitionS = {
            "\1\3\1\6\1\1\1\2\1\4\1\5\1\7\1\10\1\11",
            "",
            "",
            "\1\12\3\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA26_eot = DFA.unpackEncodedString(DFA26_eotS);
    static final short[] DFA26_eof = DFA.unpackEncodedString(DFA26_eofS);
    static final char[] DFA26_min = DFA.unpackEncodedStringToUnsignedChars(DFA26_minS);
    static final char[] DFA26_max = DFA.unpackEncodedStringToUnsignedChars(DFA26_maxS);
    static final short[] DFA26_accept = DFA.unpackEncodedString(DFA26_acceptS);
    static final short[] DFA26_special = DFA.unpackEncodedString(DFA26_specialS);
    static final short[][] DFA26_transition;

    static {
        int numStates = DFA26_transitionS.length;
        DFA26_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA26_transition[i] = DFA.unpackEncodedString(DFA26_transitionS[i]);
        }
    }

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = DFA26_eot;
            this.eof = DFA26_eof;
            this.min = DFA26_min;
            this.max = DFA26_max;
            this.accept = DFA26_accept;
            this.special = DFA26_special;
            this.transition = DFA26_transition;
        }
        public String getDescription() {
            return "1664:1: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' ) ) | kw= '<>' | kw= '?:' | kw= '<=>' )";
        }
    }
    static final String DFA40_eotS =
        "\112\uffff";
    static final String DFA40_eofS =
        "\1\2\111\uffff";
    static final String DFA40_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA40_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA40_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA40_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA40_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\1\1\2\2\1\uffff\47\2\1"+
            "\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA40_eot = DFA.unpackEncodedString(DFA40_eotS);
    static final short[] DFA40_eof = DFA.unpackEncodedString(DFA40_eofS);
    static final char[] DFA40_min = DFA.unpackEncodedStringToUnsignedChars(DFA40_minS);
    static final char[] DFA40_max = DFA.unpackEncodedStringToUnsignedChars(DFA40_maxS);
    static final short[] DFA40_accept = DFA.unpackEncodedString(DFA40_acceptS);
    static final short[] DFA40_special = DFA.unpackEncodedString(DFA40_specialS);
    static final short[][] DFA40_transition;

    static {
        int numStates = DFA40_transitionS.length;
        DFA40_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA40_transition[i] = DFA.unpackEncodedString(DFA40_transitionS[i]);
        }
    }

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = DFA40_eot;
            this.eof = DFA40_eof;
            this.min = DFA40_min;
            this.max = DFA40_max;
            this.accept = DFA40_accept;
            this.special = DFA40_special;
            this.transition = DFA40_transition;
        }
        public String getDescription() {
            return "2418:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\43\uffff";
    static final String DFA39_eofS =
        "\43\uffff";
    static final String DFA39_minS =
        "\1\4\2\0\40\uffff";
    static final String DFA39_maxS =
        "\1\124\2\0\40\uffff";
    static final String DFA39_acceptS =
        "\3\uffff\2\1\1\2\34\uffff\1\3";
    static final String DFA39_specialS =
        "\1\0\1\1\1\2\40\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\1\2\5\3\uffff\2\5\10\uffff\1\2\1\42\1\5\1\uffff\2\5\14\uffff"+
            "\1\5\3\uffff\1\3\3\uffff\2\5\4\uffff\1\5\5\uffff\2\5\1\uffff"+
            "\1\5\1\uffff\1\4\1\5\1\uffff\1\5\3\uffff\3\5\2\uffff\12\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "2439:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_0 = input.LA(1);

                         
                        int index39_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA39_0==RULE_ID) ) {s = 1;}

                        else if ( (LA39_0==20) ) {s = 2;}

                        else if ( (LA39_0==42) && (synpred16_InternalMokaDSL())) {s = 3;}

                        else if ( (LA39_0==63) && (synpred16_InternalMokaDSL())) {s = 4;}

                        else if ( ((LA39_0>=RULE_STRING && LA39_0<=RULE_INT)||(LA39_0>=RULE_HEX && LA39_0<=RULE_DECIMAL)||LA39_0==22||(LA39_0>=24 && LA39_0<=25)||LA39_0==38||(LA39_0>=46 && LA39_0<=47)||LA39_0==52||(LA39_0>=58 && LA39_0<=59)||LA39_0==61||LA39_0==64||LA39_0==66||(LA39_0>=70 && LA39_0<=72)||(LA39_0>=75 && LA39_0<=84)) ) {s = 5;}

                        else if ( (LA39_0==21) ) {s = 34;}

                         
                        input.seek(index39_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_1 = input.LA(1);

                         
                        int index39_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index39_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA39_2 = input.LA(1);

                         
                        int index39_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index39_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA41_eotS =
        "\112\uffff";
    static final String DFA41_eofS =
        "\1\2\111\uffff";
    static final String DFA41_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA41_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA41_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA41_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA41_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\3\2\1\uffff\45\2\1\1\1"+
            "\2\1\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA41_eot = DFA.unpackEncodedString(DFA41_eotS);
    static final short[] DFA41_eof = DFA.unpackEncodedString(DFA41_eofS);
    static final char[] DFA41_min = DFA.unpackEncodedStringToUnsignedChars(DFA41_minS);
    static final char[] DFA41_max = DFA.unpackEncodedStringToUnsignedChars(DFA41_maxS);
    static final short[] DFA41_accept = DFA.unpackEncodedString(DFA41_acceptS);
    static final short[] DFA41_special = DFA.unpackEncodedString(DFA41_specialS);
    static final short[][] DFA41_transition;

    static {
        int numStates = DFA41_transitionS.length;
        DFA41_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA41_transition[i] = DFA.unpackEncodedString(DFA41_transitionS[i]);
        }
    }

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = DFA41_eot;
            this.eof = DFA41_eof;
            this.min = DFA41_min;
            this.max = DFA41_max;
            this.accept = DFA41_accept;
            this.special = DFA41_special;
            this.transition = DFA41_transition;
        }
        public String getDescription() {
            return "2518:3: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_1 = input.LA(1);

                         
                        int index41_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index41_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA43_eotS =
        "\16\uffff";
    static final String DFA43_eofS =
        "\16\uffff";
    static final String DFA43_minS =
        "\1\4\15\uffff";
    static final String DFA43_maxS =
        "\1\124\15\uffff";
    static final String DFA43_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
        "\15";
    static final String DFA43_specialS =
        "\16\uffff}>";
    static final String[] DFA43_transitionS = {
            "\1\4\2\5\3\uffff\2\5\10\uffff\1\15\1\uffff\1\4\1\uffff\1\5\1"+
            "\1\14\uffff\1\4\23\uffff\1\5\1\2\1\uffff\1\5\2\uffff\1\6\1\uffff"+
            "\1\3\3\uffff\1\7\1\10\1\11\2\uffff\4\4\3\5\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
    static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
    static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
    static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
    static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
    static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
    static final short[][] DFA43_transition;

    static {
        int numStates = DFA43_transitionS.length;
        DFA43_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
        }
    }

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = DFA43_eot;
            this.eof = DFA43_eof;
            this.min = DFA43_min;
            this.max = DFA43_max;
            this.accept = DFA43_accept;
            this.special = DFA43_special;
            this.transition = DFA43_transition;
        }
        public String getDescription() {
            return "2559:1: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | this_XFeatureCall_3= ruleXFeatureCall | this_XLiteral_4= ruleXLiteral | this_XIfExpression_5= ruleXIfExpression | this_XForLoopExpression_6= ruleXForLoopExpression | this_XWhileExpression_7= ruleXWhileExpression | this_XDoWhileExpression_8= ruleXDoWhileExpression | this_XThrowExpression_9= ruleXThrowExpression | this_XReturnExpression_10= ruleXReturnExpression | this_XTryCatchFinallyExpression_11= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_12= ruleXParenthesizedExpression )";
        }
    }
    static final String DFA52_eotS =
        "\45\uffff";
    static final String DFA52_eofS =
        "\45\uffff";
    static final String DFA52_minS =
        "\1\4\2\0\42\uffff";
    static final String DFA52_maxS =
        "\1\124\2\0\42\uffff";
    static final String DFA52_acceptS =
        "\3\uffff\2\1\1\2\37\uffff";
    static final String DFA52_specialS =
        "\1\0\1\1\1\2\42\uffff}>";
    static final String[] DFA52_transitionS = {
            "\1\1\2\5\3\uffff\2\5\10\uffff\1\2\1\uffff\1\5\1\uffff\2\5\14"+
            "\uffff\1\5\3\uffff\1\3\3\uffff\2\5\4\uffff\1\5\5\uffff\2\5\1"+
            "\uffff\2\5\1\4\1\5\1\uffff\1\5\3\uffff\17\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
    static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
    static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
    static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
    static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
    static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
    static final short[][] DFA52_transition;

    static {
        int numStates = DFA52_transitionS.length;
        DFA52_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
        }
    }

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "3011:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_0 = input.LA(1);

                         
                        int index52_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA52_0==RULE_ID) ) {s = 1;}

                        else if ( (LA52_0==20) ) {s = 2;}

                        else if ( (LA52_0==42) && (synpred20_InternalMokaDSL())) {s = 3;}

                        else if ( (LA52_0==63) && (synpred20_InternalMokaDSL())) {s = 4;}

                        else if ( ((LA52_0>=RULE_STRING && LA52_0<=RULE_INT)||(LA52_0>=RULE_HEX && LA52_0<=RULE_DECIMAL)||LA52_0==22||(LA52_0>=24 && LA52_0<=25)||LA52_0==38||(LA52_0>=46 && LA52_0<=47)||LA52_0==52||(LA52_0>=58 && LA52_0<=59)||(LA52_0>=61 && LA52_0<=62)||LA52_0==64||LA52_0==66||(LA52_0>=70 && LA52_0<=84)) ) {s = 5;}

                         
                        input.seek(index52_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_1 = input.LA(1);

                         
                        int index52_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index52_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_2 = input.LA(1);

                         
                        int index52_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index52_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA75_eotS =
        "\112\uffff";
    static final String DFA75_eofS =
        "\1\2\111\uffff";
    static final String DFA75_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA75_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA75_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA75_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA75_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\1\1\2\2\1\uffff\47\2\1"+
            "\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
    static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
    static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
    static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
    static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
    static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
    static final short[][] DFA75_transition;

    static {
        int numStates = DFA75_transitionS.length;
        DFA75_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = DFA75_eot;
            this.eof = DFA75_eof;
            this.min = DFA75_min;
            this.max = DFA75_max;
            this.accept = DFA75_accept;
            this.special = DFA75_special;
            this.transition = DFA75_transition;
        }
        public String getDescription() {
            return "4354:2: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA74_eotS =
        "\43\uffff";
    static final String DFA74_eofS =
        "\43\uffff";
    static final String DFA74_minS =
        "\1\4\2\0\40\uffff";
    static final String DFA74_maxS =
        "\1\124\2\0\40\uffff";
    static final String DFA74_acceptS =
        "\3\uffff\2\1\1\2\34\uffff\1\3";
    static final String DFA74_specialS =
        "\1\0\1\1\1\2\40\uffff}>";
    static final String[] DFA74_transitionS = {
            "\1\1\2\5\3\uffff\2\5\10\uffff\1\2\1\42\1\5\1\uffff\2\5\14\uffff"+
            "\1\5\3\uffff\1\3\3\uffff\2\5\4\uffff\1\5\5\uffff\2\5\1\uffff"+
            "\1\5\1\uffff\1\4\1\5\1\uffff\1\5\3\uffff\3\5\2\uffff\12\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
    static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
    static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
    static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
    static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
    static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
    static final short[][] DFA74_transition;

    static {
        int numStates = DFA74_transitionS.length;
        DFA74_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = DFA74_eot;
            this.eof = DFA74_eof;
            this.min = DFA74_min;
            this.max = DFA74_max;
            this.accept = DFA74_accept;
            this.special = DFA74_special;
            this.transition = DFA74_transition;
        }
        public String getDescription() {
            return "4375:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==RULE_ID) ) {s = 1;}

                        else if ( (LA74_0==20) ) {s = 2;}

                        else if ( (LA74_0==42) && (synpred27_InternalMokaDSL())) {s = 3;}

                        else if ( (LA74_0==63) && (synpred27_InternalMokaDSL())) {s = 4;}

                        else if ( ((LA74_0>=RULE_STRING && LA74_0<=RULE_INT)||(LA74_0>=RULE_HEX && LA74_0<=RULE_DECIMAL)||LA74_0==22||(LA74_0>=24 && LA74_0<=25)||LA74_0==38||(LA74_0>=46 && LA74_0<=47)||LA74_0==52||(LA74_0>=58 && LA74_0<=59)||LA74_0==61||LA74_0==64||LA74_0==66||(LA74_0>=70 && LA74_0<=72)||(LA74_0>=75 && LA74_0<=84)) ) {s = 5;}

                        else if ( (LA74_0==21) ) {s = 34;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA76_eotS =
        "\112\uffff";
    static final String DFA76_eofS =
        "\1\2\111\uffff";
    static final String DFA76_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA76_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA76_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA76_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA76_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\3\2\1\uffff\45\2\1\1\1"+
            "\2\1\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
    static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
    static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
    static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
    static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
    static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
    static final short[][] DFA76_transition;

    static {
        int numStates = DFA76_transitionS.length;
        DFA76_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = DFA76_eot;
            this.eof = DFA76_eof;
            this.min = DFA76_min;
            this.max = DFA76_max;
            this.accept = DFA76_accept;
            this.special = DFA76_special;
            this.transition = DFA76_transition;
        }
        public String getDescription() {
            return "4454:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA80_eotS =
        "\112\uffff";
    static final String DFA80_eofS =
        "\1\2\111\uffff";
    static final String DFA80_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA80_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA80_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA80_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA80_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\3\2\1\uffff\16\2\1\1\30"+
            "\2\1\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA80_eot = DFA.unpackEncodedString(DFA80_eotS);
    static final short[] DFA80_eof = DFA.unpackEncodedString(DFA80_eofS);
    static final char[] DFA80_min = DFA.unpackEncodedStringToUnsignedChars(DFA80_minS);
    static final char[] DFA80_max = DFA.unpackEncodedStringToUnsignedChars(DFA80_maxS);
    static final short[] DFA80_accept = DFA.unpackEncodedString(DFA80_acceptS);
    static final short[] DFA80_special = DFA.unpackEncodedString(DFA80_specialS);
    static final short[][] DFA80_transition;

    static {
        int numStates = DFA80_transitionS.length;
        DFA80_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA80_transition[i] = DFA.unpackEncodedString(DFA80_transitionS[i]);
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = DFA80_eot;
            this.eof = DFA80_eof;
            this.min = DFA80_min;
            this.max = DFA80_max;
            this.accept = DFA80_accept;
            this.special = DFA80_special;
            this.transition = DFA80_transition;
        }
        public String getDescription() {
            return "4619:2: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA83_eotS =
        "\112\uffff";
    static final String DFA83_eofS =
        "\1\2\111\uffff";
    static final String DFA83_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA83_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA83_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA83_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA83_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\1\1\2\2\1\uffff\47\2\1"+
            "\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "4668:3: ( ( ( '(' )=>otherlv_8= '(' ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA82_eotS =
        "\43\uffff";
    static final String DFA82_eofS =
        "\43\uffff";
    static final String DFA82_minS =
        "\1\4\2\0\40\uffff";
    static final String DFA82_maxS =
        "\1\124\2\0\40\uffff";
    static final String DFA82_acceptS =
        "\3\uffff\2\1\1\2\34\uffff\1\3";
    static final String DFA82_specialS =
        "\1\0\1\1\1\2\40\uffff}>";
    static final String[] DFA82_transitionS = {
            "\1\1\2\5\3\uffff\2\5\10\uffff\1\2\1\42\1\5\1\uffff\2\5\14\uffff"+
            "\1\5\3\uffff\1\3\3\uffff\2\5\4\uffff\1\5\5\uffff\2\5\1\uffff"+
            "\1\5\1\uffff\1\4\1\5\1\uffff\1\5\3\uffff\3\5\2\uffff\12\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA82_eot = DFA.unpackEncodedString(DFA82_eotS);
    static final short[] DFA82_eof = DFA.unpackEncodedString(DFA82_eofS);
    static final char[] DFA82_min = DFA.unpackEncodedStringToUnsignedChars(DFA82_minS);
    static final char[] DFA82_max = DFA.unpackEncodedStringToUnsignedChars(DFA82_maxS);
    static final short[] DFA82_accept = DFA.unpackEncodedString(DFA82_acceptS);
    static final short[] DFA82_special = DFA.unpackEncodedString(DFA82_specialS);
    static final short[][] DFA82_transition;

    static {
        int numStates = DFA82_transitionS.length;
        DFA82_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA82_transition[i] = DFA.unpackEncodedString(DFA82_transitionS[i]);
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = DFA82_eot;
            this.eof = DFA82_eof;
            this.min = DFA82_min;
            this.max = DFA82_max;
            this.accept = DFA82_accept;
            this.special = DFA82_special;
            this.transition = DFA82_transition;
        }
        public String getDescription() {
            return "4673:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_0 = input.LA(1);

                         
                        int index82_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA82_0==RULE_ID) ) {s = 1;}

                        else if ( (LA82_0==20) ) {s = 2;}

                        else if ( (LA82_0==42) && (synpred31_InternalMokaDSL())) {s = 3;}

                        else if ( (LA82_0==63) && (synpred31_InternalMokaDSL())) {s = 4;}

                        else if ( ((LA82_0>=RULE_STRING && LA82_0<=RULE_INT)||(LA82_0>=RULE_HEX && LA82_0<=RULE_DECIMAL)||LA82_0==22||(LA82_0>=24 && LA82_0<=25)||LA82_0==38||(LA82_0>=46 && LA82_0<=47)||LA82_0==52||(LA82_0>=58 && LA82_0<=59)||LA82_0==61||LA82_0==64||LA82_0==66||(LA82_0>=70 && LA82_0<=72)||(LA82_0>=75 && LA82_0<=84)) ) {s = 5;}

                        else if ( (LA82_0==21) ) {s = 34;}

                         
                        input.seek(index82_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMokaDSL()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA84_eotS =
        "\112\uffff";
    static final String DFA84_eofS =
        "\1\2\111\uffff";
    static final String DFA84_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA84_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA84_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA84_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA84_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\3\2\1\uffff\45\2\1\1\1"+
            "\2\1\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA.unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA.unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA.unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = DFA84_eot;
            this.eof = DFA84_eof;
            this.min = DFA84_min;
            this.max = DFA84_max;
            this.accept = DFA84_accept;
            this.special = DFA84_special;
            this.transition = DFA84_transition;
        }
        public String getDescription() {
            return "4752:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_1 = input.LA(1);

                         
                        int index84_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index84_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA87_eotS =
        "\112\uffff";
    static final String DFA87_eofS =
        "\1\40\111\uffff";
    static final String DFA87_minS =
        "\1\4\37\0\52\uffff";
    static final String DFA87_maxS =
        "\1\126\37\0\52\uffff";
    static final String DFA87_acceptS =
        "\40\uffff\1\2\50\uffff\1\1";
    static final String DFA87_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
        "\1\32\1\33\1\34\1\35\1\36\52\uffff}>";
    static final String[] DFA87_transitionS = {
            "\1\1\1\26\1\23\3\uffff\1\22\1\24\3\uffff\1\40\4\uffff\1\37\1"+
            "\40\1\3\1\uffff\1\25\1\11\14\40\1\14\7\40\1\10\1\7\4\40\1\6"+
            "\5\40\1\16\1\12\1\40\1\17\1\40\1\uffff\1\30\1\40\1\13\3\40\1"+
            "\31\1\32\1\33\2\40\1\2\1\4\1\5\1\15\1\20\1\21\1\27\1\34\1\35"+
            "\1\36\2\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
    static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
    static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
    static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
    static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
    static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
    static final short[][] DFA87_transition;

    static {
        int numStates = DFA87_transitionS.length;
        DFA87_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = DFA87_eot;
            this.eof = DFA87_eof;
            this.min = DFA87_min;
            this.max = DFA87_max;
            this.accept = DFA87_accept;
            this.special = DFA87_special;
            this.transition = DFA87_transition;
        }
        public String getDescription() {
            return "5092:1: ( ( ( ruleXExpression ) )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA87_8 = input.LA(1);

                         
                        int index87_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA87_9 = input.LA(1);

                         
                        int index87_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA87_10 = input.LA(1);

                         
                        int index87_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA87_11 = input.LA(1);

                         
                        int index87_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA87_12 = input.LA(1);

                         
                        int index87_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA87_13 = input.LA(1);

                         
                        int index87_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA87_14 = input.LA(1);

                         
                        int index87_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA87_15 = input.LA(1);

                         
                        int index87_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA87_16 = input.LA(1);

                         
                        int index87_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA87_17 = input.LA(1);

                         
                        int index87_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA87_18 = input.LA(1);

                         
                        int index87_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA87_19 = input.LA(1);

                         
                        int index87_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA87_20 = input.LA(1);

                         
                        int index87_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA87_21 = input.LA(1);

                         
                        int index87_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA87_22 = input.LA(1);

                         
                        int index87_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA87_23 = input.LA(1);

                         
                        int index87_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA87_24 = input.LA(1);

                         
                        int index87_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA87_25 = input.LA(1);

                         
                        int index87_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA87_26 = input.LA(1);

                         
                        int index87_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA87_27 = input.LA(1);

                         
                        int index87_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA87_28 = input.LA(1);

                         
                        int index87_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA87_29 = input.LA(1);

                         
                        int index87_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA87_30 = input.LA(1);

                         
                        int index87_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA87_31 = input.LA(1);

                         
                        int index87_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index87_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA102_eotS =
        "\112\uffff";
    static final String DFA102_eofS =
        "\1\2\111\uffff";
    static final String DFA102_minS =
        "\1\4\1\0\110\uffff";
    static final String DFA102_maxS =
        "\1\126\1\0\110\uffff";
    static final String DFA102_acceptS =
        "\2\uffff\1\2\106\uffff\1\1";
    static final String DFA102_specialS =
        "\1\uffff\1\0\110\uffff}>";
    static final String[] DFA102_transitionS = {
            "\3\2\3\uffff\2\2\3\uffff\1\2\4\uffff\3\2\1\uffff\16\2\1\1\30"+
            "\2\1\uffff\27\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
    static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
    static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
    static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
    static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
    static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
    static final short[][] DFA102_transition;

    static {
        int numStates = DFA102_transitionS.length;
        DFA102_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = DFA102_eot;
            this.eof = DFA102_eof;
            this.min = DFA102_min;
            this.max = DFA102_max;
            this.accept = DFA102_accept;
            this.special = DFA102_special;
            this.transition = DFA102_transition;
        }
        public String getDescription() {
            return "5641:2: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalMokaDSL()) ) {s = 73;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA107_eotS =
        "\7\uffff";
    static final String DFA107_eofS =
        "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String DFA107_minS =
        "\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff";
    static final String DFA107_maxS =
        "\1\26\1\uffff\1\132\1\60\1\uffff\1\132\1\uffff";
    static final String DFA107_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String DFA107_specialS =
        "\7\uffff}>";
    static final String[] DFA107_transitionS = {
            "\1\2\21\uffff\1\1",
            "",
            "\1\4\3\uffff\2\4\4\uffff\4\4\2\uffff\1\4\1\uffff\2\4\22\uffff"+
            "\1\4\13\uffff\1\3\25\uffff\1\4\14\uffff\2\4",
            "\1\5\53\uffff\1\6",
            "",
            "\1\4\3\uffff\2\4\4\uffff\4\4\2\uffff\1\4\1\uffff\2\4\22\uffff"+
            "\1\4\13\uffff\1\3\25\uffff\1\4\14\uffff\2\4",
            ""
    };

    static final short[] DFA107_eot = DFA.unpackEncodedString(DFA107_eotS);
    static final short[] DFA107_eof = DFA.unpackEncodedString(DFA107_eofS);
    static final char[] DFA107_min = DFA.unpackEncodedStringToUnsignedChars(DFA107_minS);
    static final char[] DFA107_max = DFA.unpackEncodedStringToUnsignedChars(DFA107_maxS);
    static final short[] DFA107_accept = DFA.unpackEncodedString(DFA107_acceptS);
    static final short[] DFA107_special = DFA.unpackEncodedString(DFA107_specialS);
    static final short[][] DFA107_transition;

    static {
        int numStates = DFA107_transitionS.length;
        DFA107_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA107_transition[i] = DFA.unpackEncodedString(DFA107_transitionS[i]);
        }
    }

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = DFA107_eot;
            this.eof = DFA107_eof;
            this.min = DFA107_min;
            this.max = DFA107_max;
            this.accept = DFA107_accept;
            this.special = DFA107_special;
            this.transition = DFA107_transition;
        }
        public String getDescription() {
            return "6065:1: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedName ) ) otherlv_4= '.' otherlv_5= '*' ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_ruleModel_in_entryRuleModel75 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleModel85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXImportSection_in_ruleModel131 = new BitSet(new long[]{0x0000040000D34312L,0x0000000006000000L});
    public static final BitSet FOLLOW_ruleElement_in_ruleModel153 = new BitSet(new long[]{0x0000040000D34312L,0x0000000006000000L});
    public static final BitSet FOLLOW_ruleElement_in_entryRuleElement190 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleElement200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDependency_in_ruleElement247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleField_in_ruleElement274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstant_in_ruleElement301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructor_in_ruleElement328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethod_in_ruleElement355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_ruleElement376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDependency_in_entryRuleDependency411 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDependency421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_ruleDependency458 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleVariable_in_ruleDependency479 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleDependency491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleField_in_entryRuleField527 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleField537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_ruleField574 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleVariable_in_ruleField595 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleField607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstant_in_entryRuleConstant643 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstant653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleConstant690 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleConstant711 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleConstant728 = new BitSet(new long[]{0x0800000000040000L});
    public static final BitSet FOLLOW_18_in_ruleConstant747 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleConstant759 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleConstant775 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_RULE_IMPLICIT_DECIMAL_in_ruleConstant791 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleConstant819 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleConstant832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstructor_in_entryRuleConstructor868 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstructor878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleConstructor924 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_19_in_ruleConstructor936 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleConstructor948 = new BitSet(new long[]{0x0000040000300010L});
    public static final BitSet FOLLOW_ruleMethodVariable_in_ruleConstructor969 = new BitSet(new long[]{0x0000040000300010L});
    public static final BitSet FOLLOW_21_in_ruleConstructor982 = new BitSet(new long[]{0x0800000000040000L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleConstructor1003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethod_in_entryRuleMethod1039 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMethod1049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleMethod1136 = new BitSet(new long[]{0x0000040000D00012L,0x0000000006000000L});
    public static final BitSet FOLLOW_23_in_ruleMethod1221 = new BitSet(new long[]{0x0000040000D00012L,0x0000000006000000L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleMethod1310 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleMethod1332 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMethod1350 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleMethod1367 = new BitSet(new long[]{0x0000040000300010L});
    public static final BitSet FOLLOW_ruleMethodVariable_in_ruleMethod1388 = new BitSet(new long[]{0x0000040000300010L});
    public static final BitSet FOLLOW_21_in_ruleMethod1401 = new BitSet(new long[]{0x0800000000040000L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleMethod1422 = new BitSet(new long[]{0x0000040000D00012L,0x0000000006000000L});
    public static final BitSet FOLLOW_ruleVariable_in_entryRuleVariable1504 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariable1514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleVariable1560 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVariable1577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethodVariable_in_entryRuleMethodVariable1618 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMethodVariable1628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariable_in_ruleMethodVariable1674 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_18_in_ruleMethodVariable1687 = new BitSet(new long[]{0x0000000003000010L});
    public static final BitSet FOLLOW_ruleDefaultValue_in_ruleMethodVariable1708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComment_in_entryRuleComment1747 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComment1758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_SL_COMMENT_in_ruleComment1798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ML_COMMENT_in_ruleComment1824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDefaultValue_in_entryRuleDefaultValue1869 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDefaultValue1879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleDefaultValue1916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleDefaultValue1934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleDefaultValue1960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_entryRuleXExpression1996 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpression2006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXExpression2052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAssignment_in_entryRuleXAssignment2086 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAssignment2096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXAssignment2154 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXAssignment2170 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment2190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_ruleXAssignment2220 = new BitSet(new long[]{0x000000000C000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_ruleXAssignment2273 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXAssignment2296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_entryRuleOpSingleAssign2336 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpSingleAssign2347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_ruleOpSingleAssign2384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_entryRuleOpMultiAssign2424 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMultiAssign2435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleOpMultiAssign2473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_ruleOpMultiAssign2492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOrExpression_in_entryRuleXOrExpression2532 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOrExpression2542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression2589 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_ruleXOrExpression2642 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_ruleXOrExpression2665 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_entryRuleOpOr2704 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOr2715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_ruleOpOr2752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAndExpression_in_entryRuleXAndExpression2791 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAndExpression2801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression2848 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_ruleXAndExpression2901 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_ruleXAndExpression2924 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_entryRuleOpAnd2963 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAnd2974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleOpAnd3011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXEqualityExpression_in_entryRuleXEqualityExpression3050 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXEqualityExpression3060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression3107 = new BitSet(new long[]{0x00000003C0000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_ruleXEqualityExpression3160 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_ruleXEqualityExpression3183 = new BitSet(new long[]{0x00000003C0000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_entryRuleOpEquality3222 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpEquality3233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleOpEquality3271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_ruleOpEquality3290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleOpEquality3309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleOpEquality3328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXRelationalExpression_in_entryRuleXRelationalExpression3368 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXRelationalExpression3378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression3425 = new BitSet(new long[]{0x0000007C00000002L});
    public static final BitSet FOLLOW_34_in_ruleXRelationalExpression3461 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXRelationalExpression3484 = new BitSet(new long[]{0x0000007C00000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_ruleXRelationalExpression3545 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_ruleXRelationalExpression3568 = new BitSet(new long[]{0x0000007C00000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_entryRuleOpCompare3608 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpCompare3619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleOpCompare3657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleOpCompare3676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleOpCompare3695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleOpCompare3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXOtherOperatorExpression_in_entryRuleXOtherOperatorExpression3754 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXOtherOperatorExpression3764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression3811 = new BitSet(new long[]{0x00003FE000000002L});
    public static final BitSet FOLLOW_ruleOpOther_in_ruleXOtherOperatorExpression3864 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_ruleXOtherOperatorExpression3887 = new BitSet(new long[]{0x00003FE000000002L});
    public static final BitSet FOLLOW_ruleOpOther_in_entryRuleOpOther3926 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpOther3937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleOpOther3975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_ruleOpOther3994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleOpOther4014 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_ruleOpOther4027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleOpOther4047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleOpOther4066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleOpOther4086 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleOpOther4117 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_ruleOpOther4130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleOpOther4151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleOpOther4173 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleOpOther4204 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_ruleOpOther4217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleOpOther4238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleOpOther4259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_ruleOpOther4278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_ruleOpOther4297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXAdditiveExpression_in_entryRuleXAdditiveExpression4337 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXAdditiveExpression4347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression4394 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_ruleXAdditiveExpression4447 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_ruleXAdditiveExpression4470 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_entryRuleOpAdd4509 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpAdd4520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleOpAdd4558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleOpAdd4577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMultiplicativeExpression_in_entryRuleXMultiplicativeExpression4617 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMultiplicativeExpression4627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression4674 = new BitSet(new long[]{0x000F000000000002L});
    public static final BitSet FOLLOW_ruleOpMulti_in_ruleXMultiplicativeExpression4727 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXMultiplicativeExpression4750 = new BitSet(new long[]{0x000F000000000002L});
    public static final BitSet FOLLOW_ruleOpMulti_in_entryRuleOpMulti4789 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpMulti4800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_ruleOpMulti4838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleOpMulti4857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_ruleOpMulti4876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_ruleOpMulti4895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_entryRuleXUnaryOperation4935 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXUnaryOperation4945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_ruleXUnaryOperation5003 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXUnaryOperation_in_ruleXUnaryOperation5024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_ruleXUnaryOperation5053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpUnary_in_entryRuleOpUnary5089 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOpUnary5100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_ruleOpUnary5138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_ruleOpUnary5157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleOpUnary5176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCastedExpression_in_entryRuleXCastedExpression5216 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCastedExpression5226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_ruleXCastedExpression5273 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_53_in_ruleXCastedExpression5308 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCastedExpression5331 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_ruleXMemberFeatureCall_in_entryRuleXMemberFeatureCall5369 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXMemberFeatureCall5379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_ruleXMemberFeatureCall5426 = new BitSet(new long[]{0x01C0000000000002L});
    public static final BitSet FOLLOW_54_in_ruleXMemberFeatureCall5498 = new BitSet(new long[]{0x0000000000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_55_in_ruleXMemberFeatureCall5522 = new BitSet(new long[]{0x0000000000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall5559 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_ruleXMemberFeatureCall5575 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXAssignment_in_ruleXMemberFeatureCall5597 = new BitSet(new long[]{0x01C0000000000002L});
    public static final BitSet FOLLOW_54_in_ruleXMemberFeatureCall5683 = new BitSet(new long[]{0x0000004000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_56_in_ruleXMemberFeatureCall5707 = new BitSet(new long[]{0x0000004000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_55_in_ruleXMemberFeatureCall5744 = new BitSet(new long[]{0x0000004000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_38_in_ruleXMemberFeatureCall5773 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5794 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_57_in_ruleXMemberFeatureCall5807 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXMemberFeatureCall5828 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_37_in_ruleXMemberFeatureCall5842 = new BitSet(new long[]{0x0000000000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleXMemberFeatureCall5867 = new BitSet(new long[]{0x21C0000000100002L});
    public static final BitSet FOLLOW_20_in_ruleXMemberFeatureCall5901 = new BitSet(new long[]{0xAC10C44003740C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXMemberFeatureCall5986 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall6014 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_57_in_ruleXMemberFeatureCall6027 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXMemberFeatureCall6048 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXMemberFeatureCall6065 = new BitSet(new long[]{0x21C0000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXMemberFeatureCall6100 = new BitSet(new long[]{0x01C0000000000002L});
    public static final BitSet FOLLOW_ruleXPrimaryExpression_in_entryRuleXPrimaryExpression6140 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXPrimaryExpression6150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_ruleXPrimaryExpression6197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_ruleXPrimaryExpression6224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_ruleXPrimaryExpression6251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_ruleXPrimaryExpression6278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_ruleXPrimaryExpression6305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_ruleXPrimaryExpression6332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_ruleXPrimaryExpression6359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_ruleXPrimaryExpression6386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_ruleXPrimaryExpression6413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_ruleXPrimaryExpression6440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_ruleXPrimaryExpression6467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_ruleXPrimaryExpression6494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_ruleXPrimaryExpression6521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXLiteral_in_entryRuleXLiteral6556 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXLiteral6566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_ruleXLiteral6613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXLiteral6653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_ruleXLiteral6681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_ruleXLiteral6708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_ruleXLiteral6735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_ruleXLiteral6762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_ruleXLiteral6789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCollectionLiteral_in_entryRuleXCollectionLiteral6824 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCollectionLiteral6834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_ruleXCollectionLiteral6881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_ruleXCollectionLiteral6908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSetLiteral_in_entryRuleXSetLiteral6943 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSetLiteral6953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleXSetLiteral6999 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleXSetLiteral7011 = new BitSet(new long[]{0x3C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral7033 = new BitSet(new long[]{0x1200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleXSetLiteral7046 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSetLiteral7067 = new BitSet(new long[]{0x1200000000000000L});
    public static final BitSet FOLLOW_60_in_ruleXSetLiteral7083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXListLiteral_in_entryRuleXListLiteral7119 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXListLiteral7129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleXListLiteral7175 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_61_in_ruleXListLiteral7187 = new BitSet(new long[]{0x6C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral7209 = new BitSet(new long[]{0x4200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleXListLiteral7222 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXListLiteral7243 = new BitSet(new long[]{0x4200000000000000L});
    public static final BitSet FOLLOW_62_in_ruleXListLiteral7259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_entryRuleXClosure7295 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXClosure7305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleXClosure7365 = new BitSet(new long[]{0xEC10C44003540C70L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure7438 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleXClosure7451 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXClosure7472 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_ruleXClosure7494 = new BitSet(new long[]{0x6C10C04003540C70L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_ruleXClosure7531 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_ruleXClosure7543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionInClosure_in_entryRuleXExpressionInClosure7579 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionInClosure7589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_ruleXExpressionInClosure7645 = new BitSet(new long[]{0x2C10C04003548C72L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_15_in_ruleXExpressionInClosure7658 = new BitSet(new long[]{0x2C10C04003540C72L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_entryRuleXShortClosure7698 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXShortClosure7708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7816 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleXShortClosure7829 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXShortClosure7850 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_ruleXShortClosure7872 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXShortClosure7908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXParenthesizedExpression_in_entryRuleXParenthesizedExpression7944 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXParenthesizedExpression7954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleXParenthesizedExpression7991 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXParenthesizedExpression8013 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXParenthesizedExpression8024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXIfExpression_in_entryRuleXIfExpression8060 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXIfExpression8070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleXIfExpression8116 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXIfExpression8128 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression8149 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXIfExpression8161 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression8182 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleXIfExpression8203 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXIfExpression8225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXSwitchExpression_in_entryRuleXSwitchExpression8263 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXSwitchExpression8273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleXSwitchExpression8319 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXSwitchExpression8362 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleXSwitchExpression8374 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression8398 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_20_in_ruleXSwitchExpression8442 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXSwitchExpression8463 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleXSwitchExpression8475 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression8498 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXSwitchExpression8510 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleXSwitchExpression8524 = new BitSet(new long[]{0x0000040000100010L,0x0000000000000028L});
    public static final BitSet FOLLOW_ruleXCasePart_in_ruleXSwitchExpression8545 = new BitSet(new long[]{0x1000040000100010L,0x0000000000000038L});
    public static final BitSet FOLLOW_68_in_ruleXSwitchExpression8559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleXSwitchExpression8571 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXSwitchExpression8592 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_60_in_ruleXSwitchExpression8606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCasePart_in_entryRuleXCasePart8642 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCasePart8652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXCasePart8698 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000028L});
    public static final BitSet FOLLOW_69_in_ruleXCasePart8712 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart8733 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleXCasePart8747 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCasePart8768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXForLoopExpression_in_entryRuleXForLoopExpression8804 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXForLoopExpression8814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleXForLoopExpression8860 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXForLoopExpression8872 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_ruleXForLoopExpression8893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_ruleXForLoopExpression8905 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression8926 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXForLoopExpression8938 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXForLoopExpression8959 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXWhileExpression_in_entryRuleXWhileExpression8995 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXWhileExpression9005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleXWhileExpression9051 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXWhileExpression9063 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression9084 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXWhileExpression9096 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXWhileExpression9117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXDoWhileExpression_in_entryRuleXDoWhileExpression9153 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXDoWhileExpression9163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_ruleXDoWhileExpression9209 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression9230 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_ruleXDoWhileExpression9242 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXDoWhileExpression9254 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXDoWhileExpression9275 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXDoWhileExpression9287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBlockExpression_in_entryRuleXBlockExpression9323 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBlockExpression9333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleXBlockExpression9379 = new BitSet(new long[]{0x3C10C04003540C70L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_ruleXBlockExpression9401 = new BitSet(new long[]{0x3C10C04003548C70L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_15_in_ruleXBlockExpression9414 = new BitSet(new long[]{0x3C10C04003540C70L,0x00000000001FFFC5L});
    public static final BitSet FOLLOW_60_in_ruleXBlockExpression9430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpressionInsideBlock_in_entryRuleXExpressionInsideBlock9466 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXExpressionInsideBlock9476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_ruleXExpressionInsideBlock9523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXExpressionInsideBlock9550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXVariableDeclaration_in_entryRuleXVariableDeclaration9585 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXVariableDeclaration9595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleXVariableDeclaration9648 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_74_in_ruleXVariableDeclaration9679 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXVariableDeclaration9727 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration9748 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleXVariableDeclaration9777 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_18_in_ruleXVariableDeclaration9791 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXVariableDeclaration9812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_entryRuleJvmFormalParameter9850 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmFormalParameter9860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmFormalParameter9906 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleJvmFormalParameter9928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_entryRuleFullJvmFormalParameter9964 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFullJvmFormalParameter9974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleFullJvmFormalParameter10020 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFullJvmFormalParameter10041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFeatureCall_in_entryRuleXFeatureCall10077 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFeatureCall10087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleXFeatureCall10134 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall10155 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_57_in_ruleXFeatureCall10168 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXFeatureCall10189 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_37_in_ruleXFeatureCall10203 = new BitSet(new long[]{0x0000004000400010L,0x0000000000007800L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_ruleXFeatureCall10228 = new BitSet(new long[]{0x2000000000100002L});
    public static final BitSet FOLLOW_20_in_ruleXFeatureCall10262 = new BitSet(new long[]{0xAC10C44003740C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXFeatureCall10347 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall10375 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_57_in_ruleXFeatureCall10388 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXFeatureCall10409 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXFeatureCall10426 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXFeatureCall10461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_entryRuleFeatureCallID10499 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFeatureCallID10510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleFeatureCallID10557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleFeatureCallID10581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleFeatureCallID10600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleFeatureCallID10619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleFeatureCallID10638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdOrSuper_in_entryRuleIdOrSuper10679 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIdOrSuper10690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_ruleIdOrSuper10737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_ruleIdOrSuper10761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXConstructorCall_in_entryRuleXConstructorCall10801 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXConstructorCall10811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleXConstructorCall10857 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXConstructorCall10880 = new BitSet(new long[]{0x2000004000100002L});
    public static final BitSet FOLLOW_38_in_ruleXConstructorCall10901 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10923 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_57_in_ruleXConstructorCall10936 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleXConstructorCall10957 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_37_in_ruleXConstructorCall10971 = new BitSet(new long[]{0x2000000000100002L});
    public static final BitSet FOLLOW_20_in_ruleXConstructorCall10994 = new BitSet(new long[]{0xAC10C44003740C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXShortClosure_in_ruleXConstructorCall11067 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall11095 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_57_in_ruleXConstructorCall11108 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXConstructorCall11129 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXConstructorCall11146 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_ruleXClosure_in_ruleXConstructorCall11181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXBooleanLiteral_in_entryRuleXBooleanLiteral11218 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXBooleanLiteral11228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_ruleXBooleanLiteral11275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleXBooleanLiteral11299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNullLiteral_in_entryRuleXNullLiteral11349 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNullLiteral11359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleXNullLiteral11405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXNumberLiteral_in_entryRuleXNumberLiteral11441 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXNumberLiteral11451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleXNumberLiteral11506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXStringLiteral_in_entryRuleXStringLiteral11542 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXStringLiteral11552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleXStringLiteral11603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTypeLiteral_in_entryRuleXTypeLiteral11644 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTypeLiteral11654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_ruleXTypeLiteral11700 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXTypeLiteral11712 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXTypeLiteral11735 = new BitSet(new long[]{0x2000000000200000L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleXTypeLiteral11756 = new BitSet(new long[]{0x2000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXTypeLiteral11769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXThrowExpression_in_entryRuleXThrowExpression11805 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXThrowExpression11815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_ruleXThrowExpression11861 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXThrowExpression11882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXReturnExpression_in_entryRuleXReturnExpression11918 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXReturnExpression11928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_ruleXReturnExpression11974 = new BitSet(new long[]{0x2C10C04003540C72L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXReturnExpression12005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXTryCatchFinallyExpression_in_entryRuleXTryCatchFinallyExpression12042 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXTryCatchFinallyExpression12052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_ruleXTryCatchFinallyExpression12098 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_ruleXTryCatchFinallyExpression12149 = new BitSet(new long[]{0x0000000000000002L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_ruleXTryCatchFinallyExpression12171 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_ruleXTryCatchFinallyExpression12215 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXTryCatchFinallyExpression12236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXCatchClause_in_entryRuleXCatchClause12274 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXCatchClause12284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_ruleXCatchClause12329 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_20_in_ruleXCatchClause12342 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleFullJvmFormalParameter_in_ruleXCatchClause12363 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXCatchClause12375 = new BitSet(new long[]{0x2C10C04003540C70L,0x00000000001FF9C5L});
    public static final BitSet FOLLOW_ruleXExpression_in_ruleXCatchClause12396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName12433 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName12444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName12491 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_ruleQualifiedName12519 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_ruleQualifiedName12542 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber12596 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumber12607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_HEX_in_ruleNumber12651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber12679 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber12705 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_ruleNumber12725 = new BitSet(new long[]{0x0000000000000840L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber12741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_DECIMAL_in_ruleNumber12767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_entryRuleJvmTypeReference12822 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmTypeReference12832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_ruleJvmTypeReference12880 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_ruleJvmTypeReference12916 = new BitSet(new long[]{0x2000000000000002L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_ruleJvmTypeReference12947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_entryRuleArrayBrackets12983 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArrayBrackets12994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleArrayBrackets13032 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_ruleArrayBrackets13045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXFunctionTypeRef_in_entryRuleXFunctionTypeRef13085 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXFunctionTypeRef13095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_ruleXFunctionTypeRef13133 = new BitSet(new long[]{0x0000040000300010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13155 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_57_in_ruleXFunctionTypeRef13168 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13189 = new BitSet(new long[]{0x0200000000200000L});
    public static final BitSet FOLLOW_21_in_ruleXFunctionTypeRef13205 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_42_in_ruleXFunctionTypeRef13219 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleXFunctionTypeRef13240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmParameterizedTypeReference_in_entryRuleJvmParameterizedTypeReference13276 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmParameterizedTypeReference13286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleJvmParameterizedTypeReference13334 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_38_in_ruleJvmParameterizedTypeReference13355 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13377 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_57_in_ruleJvmParameterizedTypeReference13390 = new BitSet(new long[]{0x0000040000100010L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_ruleJvmParameterizedTypeReference13411 = new BitSet(new long[]{0x0200002000000000L});
    public static final BitSet FOLLOW_37_in_ruleJvmParameterizedTypeReference13425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmArgumentTypeReference_in_entryRuleJvmArgumentTypeReference13463 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmArgumentTypeReference13473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmArgumentTypeReference13520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_ruleJvmArgumentTypeReference13547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmWildcardTypeReference_in_entryRuleJvmWildcardTypeReference13582 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmWildcardTypeReference13592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_ruleJvmWildcardTypeReference13638 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004800L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_ruleJvmWildcardTypeReference13660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_ruleJvmWildcardTypeReference13687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmUpperBound_in_entryRuleJvmUpperBound13725 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBound13735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleJvmUpperBound13772 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBound13793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmUpperBoundAnded_in_entryRuleJvmUpperBoundAnded13829 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmUpperBoundAnded13839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_ruleJvmUpperBoundAnded13876 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmUpperBoundAnded13897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmLowerBound_in_entryRuleJvmLowerBound13933 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleJvmLowerBound13943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_ruleJvmLowerBound13980 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_ruleJvmLowerBound14001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_entryRuleQualifiedNameWithWildcard14040 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameWithWildcard14051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameWithWildcard14098 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_ruleQualifiedNameWithWildcard14116 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_ruleQualifiedNameWithWildcard14129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_entryRuleValidID14170 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValidID14181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleValidID14220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXImportSection_in_entryRuleXImportSection14264 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXImportSection14274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXImportDeclaration_in_ruleXImportSection14319 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_ruleXImportDeclaration_in_entryRuleXImportDeclaration14355 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXImportDeclaration14365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleXImportDeclaration14402 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_22_in_ruleXImportDeclaration14422 = new BitSet(new long[]{0x0000000000000010L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_ruleXImportDeclaration14453 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14490 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_ruleXImportDeclaration14502 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_ruleXImportDeclaration14514 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleXImportDeclaration14544 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleQualifiedNameWithWildcard_in_ruleXImportDeclaration14571 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_15_in_ruleXImportDeclaration14585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_ruleVisibility14637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_ruleVisibility14654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMultiAssign_in_synpred1_InternalMokaDSL2241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOr_in_synpred2_InternalMokaDSL2610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAnd_in_synpred3_InternalMokaDSL2869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpEquality_in_synpred4_InternalMokaDSL3128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_synpred5_InternalMokaDSL3442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpCompare_in_synpred6_InternalMokaDSL3513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpOther_in_synpred7_InternalMokaDSL3832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_synpred8_InternalMokaDSL4101 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_synpred8_InternalMokaDSL4106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred9_InternalMokaDSL4188 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_synpred9_InternalMokaDSL4193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpAdd_in_synpred10_InternalMokaDSL4415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOpMulti_in_synpred11_InternalMokaDSL4695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_synpred12_InternalMokaDSL5289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred13_InternalMokaDSL5444 = new BitSet(new long[]{0x0000000000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_55_in_synpred13_InternalMokaDSL5458 = new BitSet(new long[]{0x0000000000400010L,0x0000000000003800L});
    public static final BitSet FOLLOW_ruleFeatureCallID_in_synpred13_InternalMokaDSL5474 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_ruleOpSingleAssign_in_synpred13_InternalMokaDSL5480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred14_InternalMokaDSL5622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_synpred14_InternalMokaDSL5636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_synpred14_InternalMokaDSL5656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred15_InternalMokaDSL5883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred16_InternalMokaDSL5935 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred16_InternalMokaDSL5942 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred16_InternalMokaDSL5949 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_synpred16_InternalMokaDSL5963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_synpred17_InternalMokaDSL6083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_synpred18_InternalMokaDSL6634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalMokaDSL7384 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred20_InternalMokaDSL7391 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred20_InternalMokaDSL7398 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_synpred20_InternalMokaDSL7412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_synpred22_InternalMokaDSL8195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValidID_in_synpred23_InternalMokaDSL8337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_synpred23_InternalMokaDSL8343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred24_InternalMokaDSL8419 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_synpred24_InternalMokaDSL8426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_67_in_synpred24_InternalMokaDSL8432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmTypeReference_in_synpred25_InternalMokaDSL9697 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleValidID_in_synpred25_InternalMokaDSL9706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred26_InternalMokaDSL10244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalMokaDSL10296 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred27_InternalMokaDSL10303 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred27_InternalMokaDSL10310 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_synpred27_InternalMokaDSL10324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_synpred28_InternalMokaDSL10444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred29_InternalMokaDSL10893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_synpred30_InternalMokaDSL10986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalMokaDSL11016 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred31_InternalMokaDSL11023 = new BitSet(new long[]{0x0000040000100010L});
    public static final BitSet FOLLOW_ruleJvmFormalParameter_in_synpred31_InternalMokaDSL11030 = new BitSet(new long[]{0x8200000000000000L});
    public static final BitSet FOLLOW_63_in_synpred31_InternalMokaDSL11044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_synpred32_InternalMokaDSL11164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXExpression_in_synpred33_InternalMokaDSL11988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_synpred34_InternalMokaDSL12133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_synpred35_InternalMokaDSL12163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred37_InternalMokaDSL12510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayBrackets_in_synpred38_InternalMokaDSL12895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_synpred39_InternalMokaDSL13347 = new BitSet(new long[]{0x0000000000000002L});

}
